// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: his_gnss_data.proto
package com.aidem.cn.dto;
public final class HisGnssData {
  private HisGnssData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HisDataGNSSOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HisDataGNSS)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .DateTime time_stamp = 1;</code>
     */
    boolean hasTimeStamp();
    /**
     * <code>required .DateTime time_stamp = 1;</code>
     */
    RealtimeData.DateTime getTimeStamp();
    /**
     * <code>required .DateTime time_stamp = 1;</code>
     */
    RealtimeData.DateTimeOrBuilder getTimeStampOrBuilder();

    /**
     * <code>required fixed32 frequency = 2;</code>
     */
    boolean hasFrequency();
    /**
     * <code>required fixed32 frequency = 2;</code>
     */
    int getFrequency();

    /**
     * <code>repeated .RtGNSS gnss = 3;</code>
     */
    java.util.List<RealtimeData.RtGNSS>
        getGnssList();
    /**
     * <code>repeated .RtGNSS gnss = 3;</code>
     */
    RealtimeData.RtGNSS getGnss(int index);
    /**
     * <code>repeated .RtGNSS gnss = 3;</code>
     */
    int getGnssCount();
    /**
     * <code>repeated .RtGNSS gnss = 3;</code>
     */
    java.util.List<? extends RealtimeData.RtGNSSOrBuilder>
        getGnssOrBuilderList();
    /**
     * <code>repeated .RtGNSS gnss = 3;</code>
     */
    RealtimeData.RtGNSSOrBuilder getGnssOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code HisDataGNSS}
   */
  public  static final class HisDataGNSS extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:HisDataGNSS)
      HisDataGNSSOrBuilder {
    // Use HisDataGNSS.newBuilder() to construct.
    private HisDataGNSS(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HisDataGNSS() {
      frequency_ = 0;
      gnss_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HisDataGNSS(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              RealtimeData.DateTime.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = timeStamp_.toBuilder();
              }
              timeStamp_ = input.readMessage(RealtimeData.DateTime.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeStamp_);
                timeStamp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              frequency_ = input.readFixed32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                gnss_ = new java.util.ArrayList<RealtimeData.RtGNSS>();
                mutable_bitField0_ |= 0x00000004;
              }
              gnss_.add(
                  input.readMessage(RealtimeData.RtGNSS.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          gnss_ = java.util.Collections.unmodifiableList(gnss_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return HisGnssData.internal_static_HisDataGNSS_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return HisGnssData.internal_static_HisDataGNSS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HisDataGNSS.class, Builder.class);
    }

    private int bitField0_;
    public static final int TIME_STAMP_FIELD_NUMBER = 1;
    private RealtimeData.DateTime timeStamp_;
    /**
     * <code>required .DateTime time_stamp = 1;</code>
     */
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .DateTime time_stamp = 1;</code>
     */
    public RealtimeData.DateTime getTimeStamp() {
      return timeStamp_ == null ? RealtimeData.DateTime.getDefaultInstance() : timeStamp_;
    }
    /**
     * <code>required .DateTime time_stamp = 1;</code>
     */
    public RealtimeData.DateTimeOrBuilder getTimeStampOrBuilder() {
      return timeStamp_ == null ? RealtimeData.DateTime.getDefaultInstance() : timeStamp_;
    }

    public static final int FREQUENCY_FIELD_NUMBER = 2;
    private int frequency_;
    /**
     * <code>required fixed32 frequency = 2;</code>
     */
    public boolean hasFrequency() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required fixed32 frequency = 2;</code>
     */
    public int getFrequency() {
      return frequency_;
    }

    public static final int GNSS_FIELD_NUMBER = 3;
    private java.util.List<RealtimeData.RtGNSS> gnss_;
    /**
     * <code>repeated .RtGNSS gnss = 3;</code>
     */
    public java.util.List<RealtimeData.RtGNSS> getGnssList() {
      return gnss_;
    }
    /**
     * <code>repeated .RtGNSS gnss = 3;</code>
     */
    public java.util.List<? extends RealtimeData.RtGNSSOrBuilder>
        getGnssOrBuilderList() {
      return gnss_;
    }
    /**
     * <code>repeated .RtGNSS gnss = 3;</code>
     */
    public int getGnssCount() {
      return gnss_.size();
    }
    /**
     * <code>repeated .RtGNSS gnss = 3;</code>
     */
    public RealtimeData.RtGNSS getGnss(int index) {
      return gnss_.get(index);
    }
    /**
     * <code>repeated .RtGNSS gnss = 3;</code>
     */
    public RealtimeData.RtGNSSOrBuilder getGnssOrBuilder(
        int index) {
      return gnss_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimeStamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFrequency()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getTimeStamp().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getGnssCount(); i++) {
        if (!getGnss(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getTimeStamp());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed32(2, frequency_);
      }
      for (int i = 0; i < gnss_.size(); i++) {
        output.writeMessage(3, gnss_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimeStamp());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, frequency_);
      }
      for (int i = 0; i < gnss_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, gnss_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HisDataGNSS)) {
        return super.equals(obj);
      }
      HisDataGNSS other = (HisDataGNSS) obj;

      boolean result = true;
      result = result && (hasTimeStamp() == other.hasTimeStamp());
      if (hasTimeStamp()) {
        result = result && getTimeStamp()
            .equals(other.getTimeStamp());
      }
      result = result && (hasFrequency() == other.hasFrequency());
      if (hasFrequency()) {
        result = result && (getFrequency()
            == other.getFrequency());
      }
      result = result && getGnssList()
          .equals(other.getGnssList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTimeStamp()) {
        hash = (37 * hash) + TIME_STAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimeStamp().hashCode();
      }
      if (hasFrequency()) {
        hash = (37 * hash) + FREQUENCY_FIELD_NUMBER;
        hash = (53 * hash) + getFrequency();
      }
      if (getGnssCount() > 0) {
        hash = (37 * hash) + GNSS_FIELD_NUMBER;
        hash = (53 * hash) + getGnssList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HisDataGNSS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HisDataGNSS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HisDataGNSS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HisDataGNSS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HisDataGNSS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HisDataGNSS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HisDataGNSS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HisDataGNSS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HisDataGNSS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HisDataGNSS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HisDataGNSS prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HisDataGNSS}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HisDataGNSS)
        HisDataGNSSOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return HisGnssData.internal_static_HisDataGNSS_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return HisGnssData.internal_static_HisDataGNSS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HisDataGNSS.class, Builder.class);
      }

      // Construct using HisGnssData.HisDataGNSS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTimeStampFieldBuilder();
          getGnssFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (timeStampBuilder_ == null) {
          timeStamp_ = null;
        } else {
          timeStampBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        frequency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (gnssBuilder_ == null) {
          gnss_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          gnssBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return HisGnssData.internal_static_HisDataGNSS_descriptor;
      }

      public HisDataGNSS getDefaultInstanceForType() {
        return HisDataGNSS.getDefaultInstance();
      }

      public HisDataGNSS build() {
        HisDataGNSS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public HisDataGNSS buildPartial() {
        HisDataGNSS result = new HisDataGNSS(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (timeStampBuilder_ == null) {
          result.timeStamp_ = timeStamp_;
        } else {
          result.timeStamp_ = timeStampBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.frequency_ = frequency_;
        if (gnssBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            gnss_ = java.util.Collections.unmodifiableList(gnss_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.gnss_ = gnss_;
        } else {
          result.gnss_ = gnssBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HisDataGNSS) {
          return mergeFrom((HisDataGNSS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HisDataGNSS other) {
        if (other == HisDataGNSS.getDefaultInstance()) return this;
        if (other.hasTimeStamp()) {
          mergeTimeStamp(other.getTimeStamp());
        }
        if (other.hasFrequency()) {
          setFrequency(other.getFrequency());
        }
        if (gnssBuilder_ == null) {
          if (!other.gnss_.isEmpty()) {
            if (gnss_.isEmpty()) {
              gnss_ = other.gnss_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureGnssIsMutable();
              gnss_.addAll(other.gnss_);
            }
            onChanged();
          }
        } else {
          if (!other.gnss_.isEmpty()) {
            if (gnssBuilder_.isEmpty()) {
              gnssBuilder_.dispose();
              gnssBuilder_ = null;
              gnss_ = other.gnss_;
              bitField0_ = (bitField0_ & ~0x00000004);
              gnssBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGnssFieldBuilder() : null;
            } else {
              gnssBuilder_.addAllMessages(other.gnss_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimeStamp()) {
          return false;
        }
        if (!hasFrequency()) {
          return false;
        }
        if (!getTimeStamp().isInitialized()) {
          return false;
        }
        for (int i = 0; i < getGnssCount(); i++) {
          if (!getGnss(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HisDataGNSS parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HisDataGNSS) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private RealtimeData.DateTime timeStamp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          RealtimeData.DateTime, RealtimeData.DateTime.Builder, RealtimeData.DateTimeOrBuilder> timeStampBuilder_;
      /**
       * <code>required .DateTime time_stamp = 1;</code>
       */
      public boolean hasTimeStamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .DateTime time_stamp = 1;</code>
       */
      public RealtimeData.DateTime getTimeStamp() {
        if (timeStampBuilder_ == null) {
          return timeStamp_ == null ? RealtimeData.DateTime.getDefaultInstance() : timeStamp_;
        } else {
          return timeStampBuilder_.getMessage();
        }
      }
      /**
       * <code>required .DateTime time_stamp = 1;</code>
       */
      public Builder setTimeStamp(RealtimeData.DateTime value) {
        if (timeStampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeStamp_ = value;
          onChanged();
        } else {
          timeStampBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .DateTime time_stamp = 1;</code>
       */
      public Builder setTimeStamp(
          RealtimeData.DateTime.Builder builderForValue) {
        if (timeStampBuilder_ == null) {
          timeStamp_ = builderForValue.build();
          onChanged();
        } else {
          timeStampBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .DateTime time_stamp = 1;</code>
       */
      public Builder mergeTimeStamp(RealtimeData.DateTime value) {
        if (timeStampBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              timeStamp_ != null &&
              timeStamp_ != RealtimeData.DateTime.getDefaultInstance()) {
            timeStamp_ =
              RealtimeData.DateTime.newBuilder(timeStamp_).mergeFrom(value).buildPartial();
          } else {
            timeStamp_ = value;
          }
          onChanged();
        } else {
          timeStampBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .DateTime time_stamp = 1;</code>
       */
      public Builder clearTimeStamp() {
        if (timeStampBuilder_ == null) {
          timeStamp_ = null;
          onChanged();
        } else {
          timeStampBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .DateTime time_stamp = 1;</code>
       */
      public RealtimeData.DateTime.Builder getTimeStampBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTimeStampFieldBuilder().getBuilder();
      }
      /**
       * <code>required .DateTime time_stamp = 1;</code>
       */
      public RealtimeData.DateTimeOrBuilder getTimeStampOrBuilder() {
        if (timeStampBuilder_ != null) {
          return timeStampBuilder_.getMessageOrBuilder();
        } else {
          return timeStamp_ == null ?
              RealtimeData.DateTime.getDefaultInstance() : timeStamp_;
        }
      }
      /**
       * <code>required .DateTime time_stamp = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RealtimeData.DateTime, RealtimeData.DateTime.Builder, RealtimeData.DateTimeOrBuilder>
          getTimeStampFieldBuilder() {
        if (timeStampBuilder_ == null) {
          timeStampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RealtimeData.DateTime, RealtimeData.DateTime.Builder, RealtimeData.DateTimeOrBuilder>(
                  getTimeStamp(),
                  getParentForChildren(),
                  isClean());
          timeStamp_ = null;
        }
        return timeStampBuilder_;
      }

      private int frequency_ ;
      /**
       * <code>required fixed32 frequency = 2;</code>
       */
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required fixed32 frequency = 2;</code>
       */
      public int getFrequency() {
        return frequency_;
      }
      /**
       * <code>required fixed32 frequency = 2;</code>
       */
      public Builder setFrequency(int value) {
        bitField0_ |= 0x00000002;
        frequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 frequency = 2;</code>
       */
      public Builder clearFrequency() {
        bitField0_ = (bitField0_ & ~0x00000002);
        frequency_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<RealtimeData.RtGNSS> gnss_ =
        java.util.Collections.emptyList();
      private void ensureGnssIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          gnss_ = new java.util.ArrayList<RealtimeData.RtGNSS>(gnss_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RealtimeData.RtGNSS, RealtimeData.RtGNSS.Builder, RealtimeData.RtGNSSOrBuilder> gnssBuilder_;

      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public java.util.List<RealtimeData.RtGNSS> getGnssList() {
        if (gnssBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gnss_);
        } else {
          return gnssBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public int getGnssCount() {
        if (gnssBuilder_ == null) {
          return gnss_.size();
        } else {
          return gnssBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public RealtimeData.RtGNSS getGnss(int index) {
        if (gnssBuilder_ == null) {
          return gnss_.get(index);
        } else {
          return gnssBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public Builder setGnss(
          int index, RealtimeData.RtGNSS value) {
        if (gnssBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGnssIsMutable();
          gnss_.set(index, value);
          onChanged();
        } else {
          gnssBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public Builder setGnss(
          int index, RealtimeData.RtGNSS.Builder builderForValue) {
        if (gnssBuilder_ == null) {
          ensureGnssIsMutable();
          gnss_.set(index, builderForValue.build());
          onChanged();
        } else {
          gnssBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public Builder addGnss(RealtimeData.RtGNSS value) {
        if (gnssBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGnssIsMutable();
          gnss_.add(value);
          onChanged();
        } else {
          gnssBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public Builder addGnss(
          int index, RealtimeData.RtGNSS value) {
        if (gnssBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGnssIsMutable();
          gnss_.add(index, value);
          onChanged();
        } else {
          gnssBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public Builder addGnss(
          RealtimeData.RtGNSS.Builder builderForValue) {
        if (gnssBuilder_ == null) {
          ensureGnssIsMutable();
          gnss_.add(builderForValue.build());
          onChanged();
        } else {
          gnssBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public Builder addGnss(
          int index, RealtimeData.RtGNSS.Builder builderForValue) {
        if (gnssBuilder_ == null) {
          ensureGnssIsMutable();
          gnss_.add(index, builderForValue.build());
          onChanged();
        } else {
          gnssBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public Builder addAllGnss(
          Iterable<? extends RealtimeData.RtGNSS> values) {
        if (gnssBuilder_ == null) {
          ensureGnssIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gnss_);
          onChanged();
        } else {
          gnssBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public Builder clearGnss() {
        if (gnssBuilder_ == null) {
          gnss_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          gnssBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public Builder removeGnss(int index) {
        if (gnssBuilder_ == null) {
          ensureGnssIsMutable();
          gnss_.remove(index);
          onChanged();
        } else {
          gnssBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public RealtimeData.RtGNSS.Builder getGnssBuilder(
          int index) {
        return getGnssFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public RealtimeData.RtGNSSOrBuilder getGnssOrBuilder(
          int index) {
        if (gnssBuilder_ == null) {
          return gnss_.get(index);  } else {
          return gnssBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public java.util.List<? extends RealtimeData.RtGNSSOrBuilder>
           getGnssOrBuilderList() {
        if (gnssBuilder_ != null) {
          return gnssBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gnss_);
        }
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public RealtimeData.RtGNSS.Builder addGnssBuilder() {
        return getGnssFieldBuilder().addBuilder(
            RealtimeData.RtGNSS.getDefaultInstance());
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public RealtimeData.RtGNSS.Builder addGnssBuilder(
          int index) {
        return getGnssFieldBuilder().addBuilder(
            index, RealtimeData.RtGNSS.getDefaultInstance());
      }
      /**
       * <code>repeated .RtGNSS gnss = 3;</code>
       */
      public java.util.List<RealtimeData.RtGNSS.Builder>
           getGnssBuilderList() {
        return getGnssFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RealtimeData.RtGNSS, RealtimeData.RtGNSS.Builder, RealtimeData.RtGNSSOrBuilder>
          getGnssFieldBuilder() {
        if (gnssBuilder_ == null) {
          gnssBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RealtimeData.RtGNSS, RealtimeData.RtGNSS.Builder, RealtimeData.RtGNSSOrBuilder>(
                  gnss_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          gnss_ = null;
        }
        return gnssBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:HisDataGNSS)
    }

    // @@protoc_insertion_point(class_scope:HisDataGNSS)
    private static final HisDataGNSS DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HisDataGNSS();
    }

    public static HisDataGNSS getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<HisDataGNSS>
        PARSER = new com.google.protobuf.AbstractParser<HisDataGNSS>() {
      public HisDataGNSS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HisDataGNSS(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HisDataGNSS> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HisDataGNSS> getParserForType() {
      return PARSER;
    }

    public HisDataGNSS getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HisDataGNSS_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_HisDataGNSS_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\023his_gnss_data.proto\032\023realtime_data.pro" +
      "to\"V\n\013HisDataGNSS\022\035\n\ntime_stamp\030\001 \002(\0132\t." +
      "DateTime\022\021\n\tfrequency\030\002 \002(\007\022\025\n\004gnss\030\003 \003(" +
      "\0132\007.RtGNSS"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          RealtimeData.getDescriptor(),
        }, assigner);
    internal_static_HisDataGNSS_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_HisDataGNSS_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_HisDataGNSS_descriptor,
        new String[] { "TimeStamp", "Frequency", "Gnss", });
    RealtimeData.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
