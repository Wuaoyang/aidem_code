package com.aidem.cn.dto;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: realtime_data.proto

public final class RealtimeData {
    private RealtimeData() {}
    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }
    /**
     * Protobuf enum {@code RtMode}
     */
    public enum RtMode
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>RT_MODE_BACK_NORMAL = 0;</code>
         */
        RT_MODE_BACK_NORMAL(0),
        /**
         * <code>RT_MODE_ENTER_CAMERA = 1;</code>
         */
        RT_MODE_ENTER_CAMERA(1),
        ;

        /**
         * <code>RT_MODE_BACK_NORMAL = 0;</code>
         */
        public static final int RT_MODE_BACK_NORMAL_VALUE = 0;
        /**
         * <code>RT_MODE_ENTER_CAMERA = 1;</code>
         */
        public static final int RT_MODE_ENTER_CAMERA_VALUE = 1;


        public final int getNumber() {
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static RtMode valueOf(int value) {
            return forNumber(value);
        }

        public static RtMode forNumber(int value) {
            switch (value) {
                case 0: return RT_MODE_BACK_NORMAL;
                case 1: return RT_MODE_ENTER_CAMERA;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<RtMode>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
                RtMode> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<RtMode>() {
                    public RtMode findValueByNumber(int number) {
                        return RtMode.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return RealtimeData.getDescriptor().getEnumTypes().get(0);
        }

        private static final RtMode[] VALUES = values();

        public static RtMode valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private RtMode(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:RtMode)
    }

    /**
     * Protobuf enum {@code RtKeyEvent}
     */
    public enum RtKeyEvent
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>RT_KEY_CAMERA = 0;</code>
         */
        RT_KEY_CAMERA(0),
        /**
         * <code>RT_KEY_AUDIO_PLAY = 1;</code>
         */
        RT_KEY_AUDIO_PLAY(1),
        /**
         * <code>RT_KEY_AUDIO_PRE = 2;</code>
         */
        RT_KEY_AUDIO_PRE(2),
        /**
         * <code>RT_KEY_AUDIO_NEXT = 3;</code>
         */
        RT_KEY_AUDIO_NEXT(3),
        /**
         * <code>RT_KEY_AUDIO_VOLUME_UP = 4;</code>
         */
        RT_KEY_AUDIO_VOLUME_UP(4),
        /**
         * <code>RT_KEY_AUDIO_VOLUME_DOWN = 5;</code>
         */
        RT_KEY_AUDIO_VOLUME_DOWN(5),
        ;

        /**
         * <code>RT_KEY_CAMERA = 0;</code>
         */
        public static final int RT_KEY_CAMERA_VALUE = 0;
        /**
         * <code>RT_KEY_AUDIO_PLAY = 1;</code>
         */
        public static final int RT_KEY_AUDIO_PLAY_VALUE = 1;
        /**
         * <code>RT_KEY_AUDIO_PRE = 2;</code>
         */
        public static final int RT_KEY_AUDIO_PRE_VALUE = 2;
        /**
         * <code>RT_KEY_AUDIO_NEXT = 3;</code>
         */
        public static final int RT_KEY_AUDIO_NEXT_VALUE = 3;
        /**
         * <code>RT_KEY_AUDIO_VOLUME_UP = 4;</code>
         */
        public static final int RT_KEY_AUDIO_VOLUME_UP_VALUE = 4;
        /**
         * <code>RT_KEY_AUDIO_VOLUME_DOWN = 5;</code>
         */
        public static final int RT_KEY_AUDIO_VOLUME_DOWN_VALUE = 5;


        public final int getNumber() {
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static RtKeyEvent valueOf(int value) {
            return forNumber(value);
        }

        public static RtKeyEvent forNumber(int value) {
            switch (value) {
                case 0: return RT_KEY_CAMERA;
                case 1: return RT_KEY_AUDIO_PLAY;
                case 2: return RT_KEY_AUDIO_PRE;
                case 3: return RT_KEY_AUDIO_NEXT;
                case 4: return RT_KEY_AUDIO_VOLUME_UP;
                case 5: return RT_KEY_AUDIO_VOLUME_DOWN;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<RtKeyEvent>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
                RtKeyEvent> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<RtKeyEvent>() {
                    public RtKeyEvent findValueByNumber(int number) {
                        return RtKeyEvent.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return RealtimeData.getDescriptor().getEnumTypes().get(1);
        }

        private static final RtKeyEvent[] VALUES = values();

        public static RtKeyEvent valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private RtKeyEvent(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:RtKeyEvent)
    }

    /**
     * Protobuf enum {@code RtSync}
     */
    public enum RtSync
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>STOP_ALL = 0;</code>
         */
        STOP_ALL(0),
        /**
         * <code>ONLY_ONCE = 1;</code>
         */
        ONLY_ONCE(1),
        /**
         * <code>ON_VALUE_CHANGE = 2;</code>
         */
        ON_VALUE_CHANGE(2),
        /**
         * <code>ON_SECOND_CHANGE = 3;</code>
         */
        ON_SECOND_CHANGE(3),
        /**
         * <code>ON_MINUTE_CHANGE = 4;</code>
         */
        ON_MINUTE_CHANGE(4),
        /**
         * <code>ON_HOUR_CHANGE = 5;</code>
         */
        ON_HOUR_CHANGE(5),
        /**
         * <code>ON_DAY_CHANGE = 6;</code>
         */
        ON_DAY_CHANGE(6),
        /**
         * <code>ON_TEN_MINUTE_CHANGE = 7;</code>
         */
        ON_TEN_MINUTE_CHANGE(7),
        ;

        /**
         * <code>STOP_ALL = 0;</code>
         */
        public static final int STOP_ALL_VALUE = 0;
        /**
         * <code>ONLY_ONCE = 1;</code>
         */
        public static final int ONLY_ONCE_VALUE = 1;
        /**
         * <code>ON_VALUE_CHANGE = 2;</code>
         */
        public static final int ON_VALUE_CHANGE_VALUE = 2;
        /**
         * <code>ON_SECOND_CHANGE = 3;</code>
         */
        public static final int ON_SECOND_CHANGE_VALUE = 3;
        /**
         * <code>ON_MINUTE_CHANGE = 4;</code>
         */
        public static final int ON_MINUTE_CHANGE_VALUE = 4;
        /**
         * <code>ON_HOUR_CHANGE = 5;</code>
         */
        public static final int ON_HOUR_CHANGE_VALUE = 5;
        /**
         * <code>ON_DAY_CHANGE = 6;</code>
         */
        public static final int ON_DAY_CHANGE_VALUE = 6;
        /**
         * <code>ON_TEN_MINUTE_CHANGE = 7;</code>
         */
        public static final int ON_TEN_MINUTE_CHANGE_VALUE = 7;


        public final int getNumber() {
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static RtSync valueOf(int value) {
            return forNumber(value);
        }

        public static RtSync forNumber(int value) {
            switch (value) {
                case 0: return STOP_ALL;
                case 1: return ONLY_ONCE;
                case 2: return ON_VALUE_CHANGE;
                case 3: return ON_SECOND_CHANGE;
                case 4: return ON_MINUTE_CHANGE;
                case 5: return ON_HOUR_CHANGE;
                case 6: return ON_DAY_CHANGE;
                case 7: return ON_TEN_MINUTE_CHANGE;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<RtSync>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
                RtSync> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<RtSync>() {
                    public RtSync findValueByNumber(int number) {
                        return RtSync.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return RealtimeData.getDescriptor().getEnumTypes().get(2);
        }

        private static final RtSync[] VALUES = values();

        public static RtSync valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private RtSync(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:RtSync)
    }

    /**
     * Protobuf enum {@code SensorType}
     */
    public enum SensorType
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>NONE = 0;</code>
         */
        NONE(0),
        /**
         * <code>ECG = 1;</code>
         */
        ECG(1),
        /**
         * <code>PPG = 2;</code>
         */
        PPG(2),
        /**
         * <code>MAG = 4;</code>
         */
        MAG(4),
        /**
         * <code>GYRO = 8;</code>
         */
        GYRO(8),
        /**
         * <code>ACC = 16;</code>
         */
        ACC(16),
        ;

        /**
         * <code>NONE = 0;</code>
         */
        public static final int NONE_VALUE = 0;
        /**
         * <code>ECG = 1;</code>
         */
        public static final int ECG_VALUE = 1;
        /**
         * <code>PPG = 2;</code>
         */
        public static final int PPG_VALUE = 2;
        /**
         * <code>MAG = 4;</code>
         */
        public static final int MAG_VALUE = 4;
        /**
         * <code>GYRO = 8;</code>
         */
        public static final int GYRO_VALUE = 8;
        /**
         * <code>ACC = 16;</code>
         */
        public static final int ACC_VALUE = 16;


        public final int getNumber() {
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static SensorType valueOf(int value) {
            return forNumber(value);
        }

        public static SensorType forNumber(int value) {
            switch (value) {
                case 0: return NONE;
                case 1: return ECG;
                case 2: return PPG;
                case 4: return MAG;
                case 8: return GYRO;
                case 16: return ACC;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
                SensorType> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
                    public SensorType findValueByNumber(int number) {
                        return SensorType.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return RealtimeData.getDescriptor().getEnumTypes().get(3);
        }

        private static final SensorType[] VALUES = values();

        public static SensorType valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private SensorType(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:SensorType)
    }

    /**
     * Protobuf enum {@code SensorOperation}
     */
    public enum SensorOperation
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * start sync
         * </pre>
         *
         * <code>SENSOR_START_SYNC = 0;</code>
         */
        SENSOR_START_SYNC(0),
        /**
         * <pre>
         * pause sync
         * </pre>
         *
         * <code>SENSOR_PAUSE_SYNC = 1;</code>
         */
        SENSOR_PAUSE_SYNC(1),
        /**
         * <pre>
         * stop sync
         * </pre>
         *
         * <code>SENSOR_STOP_SYNC = 2;</code>
         */
        SENSOR_STOP_SYNC(2),
        ;

        /**
         * <pre>
         * start sync
         * </pre>
         *
         * <code>SENSOR_START_SYNC = 0;</code>
         */
        public static final int SENSOR_START_SYNC_VALUE = 0;
        /**
         * <pre>
         * pause sync
         * </pre>
         *
         * <code>SENSOR_PAUSE_SYNC = 1;</code>
         */
        public static final int SENSOR_PAUSE_SYNC_VALUE = 1;
        /**
         * <pre>
         * stop sync
         * </pre>
         *
         * <code>SENSOR_STOP_SYNC = 2;</code>
         */
        public static final int SENSOR_STOP_SYNC_VALUE = 2;


        public final int getNumber() {
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static SensorOperation valueOf(int value) {
            return forNumber(value);
        }

        public static SensorOperation forNumber(int value) {
            switch (value) {
                case 0: return SENSOR_START_SYNC;
                case 1: return SENSOR_PAUSE_SYNC;
                case 2: return SENSOR_STOP_SYNC;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<SensorOperation>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
                SensorOperation> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<SensorOperation>() {
                    public SensorOperation findValueByNumber(int number) {
                        return SensorOperation.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return RealtimeData.getDescriptor().getEnumTypes().get(4);
        }

        private static final SensorOperation[] VALUES = values();

        public static SensorOperation valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private SensorOperation(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:SensorOperation)
    }

    public interface RtTimeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RtTime)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required fixed32 seconds = 1;</code>
         */
        boolean hasSeconds();
        /**
         * <code>required fixed32 seconds = 1;</code>
         */
        int getSeconds();
    }
    /**
     * Protobuf type {@code RtTime}
     */
    public  static final class RtTime extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RtTime)
            RtTimeOrBuilder {
        // Use RtTime.newBuilder() to construct.
        private RtTime(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RtTime() {
            seconds_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RtTime(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 13: {
                            bitField0_ |= 0x00000001;
                            seconds_ = input.readFixed32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return RealtimeData.internal_static_RtTime_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return RealtimeData.internal_static_RtTime_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RtTime.class, Builder.class);
        }

        private int bitField0_;
        public static final int SECONDS_FIELD_NUMBER = 1;
        private int seconds_;
        /**
         * <code>required fixed32 seconds = 1;</code>
         */
        public boolean hasSeconds() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required fixed32 seconds = 1;</code>
         */
        public int getSeconds() {
            return seconds_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasSeconds()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeFixed32(1, seconds_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, seconds_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof RtTime)) {
                return super.equals(obj);
            }
            RtTime other = (RtTime) obj;

            boolean result = true;
            result = result && (hasSeconds() == other.hasSeconds());
            if (hasSeconds()) {
                result = result && (getSeconds()
                        == other.getSeconds());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasSeconds()) {
                hash = (37 * hash) + SECONDS_FIELD_NUMBER;
                hash = (53 * hash) + getSeconds();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static RtTime parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtTime parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtTime parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtTime parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtTime parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtTime parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtTime parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static RtTime parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtTime parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtTime parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(RtTime prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code RtTime}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RtTime)
                RtTimeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return RealtimeData.internal_static_RtTime_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return RealtimeData.internal_static_RtTime_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RtTime.class, Builder.class);
            }

            // Construct using RealtimeData.RtTime.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                seconds_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return RealtimeData.internal_static_RtTime_descriptor;
            }

            public RtTime getDefaultInstanceForType() {
                return RtTime.getDefaultInstance();
            }

            public RtTime build() {
                RtTime result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RtTime buildPartial() {
                RtTime result = new RtTime(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.seconds_ = seconds_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RtTime) {
                    return mergeFrom((RtTime)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RtTime other) {
                if (other == RtTime.getDefaultInstance()) return this;
                if (other.hasSeconds()) {
                    setSeconds(other.getSeconds());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasSeconds()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RtTime parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RtTime) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private int seconds_ ;
            /**
             * <code>required fixed32 seconds = 1;</code>
             */
            public boolean hasSeconds() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required fixed32 seconds = 1;</code>
             */
            public int getSeconds() {
                return seconds_;
            }
            /**
             * <code>required fixed32 seconds = 1;</code>
             */
            public Builder setSeconds(int value) {
                bitField0_ |= 0x00000001;
                seconds_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required fixed32 seconds = 1;</code>
             */
            public Builder clearSeconds() {
                bitField0_ = (bitField0_ & ~0x00000001);
                seconds_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:RtTime)
        }

        // @@protoc_insertion_point(class_scope:RtTime)
        private static final RtTime DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new RtTime();
        }

        public static RtTime getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated public static final com.google.protobuf.Parser<RtTime>
                PARSER = new com.google.protobuf.AbstractParser<RtTime>() {
            public RtTime parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RtTime(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RtTime> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RtTime> getParserForType() {
            return PARSER;
        }

        public RtTime getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface DateTimeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:DateTime)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required .RtTime date_time = 1;</code>
         */
        boolean hasDateTime();
        /**
         * <code>required .RtTime date_time = 1;</code>
         */
        RtTime getDateTime();
        /**
         * <code>required .RtTime date_time = 1;</code>
         */
        RtTimeOrBuilder getDateTimeOrBuilder();

        /**
         * <code>required sfixed32 time_zone = 2;</code>
         */
        boolean hasTimeZone();
        /**
         * <code>required sfixed32 time_zone = 2;</code>
         */
        int getTimeZone();
    }
    /**
     * Protobuf type {@code DateTime}
     */
    public  static final class DateTime extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:DateTime)
            DateTimeOrBuilder {
        // Use DateTime.newBuilder() to construct.
        private DateTime(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private DateTime() {
            timeZone_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private DateTime(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            RtTime.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                                subBuilder = dateTime_.toBuilder();
                            }
                            dateTime_ = input.readMessage(RtTime.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(dateTime_);
                                dateTime_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000001;
                            break;
                        }
                        case 21: {
                            bitField0_ |= 0x00000002;
                            timeZone_ = input.readSFixed32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return RealtimeData.internal_static_DateTime_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return RealtimeData.internal_static_DateTime_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            DateTime.class, Builder.class);
        }

        private int bitField0_;
        public static final int DATE_TIME_FIELD_NUMBER = 1;
        private RtTime dateTime_;
        /**
         * <code>required .RtTime date_time = 1;</code>
         */
        public boolean hasDateTime() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .RtTime date_time = 1;</code>
         */
        public RtTime getDateTime() {
            return dateTime_ == null ? RtTime.getDefaultInstance() : dateTime_;
        }
        /**
         * <code>required .RtTime date_time = 1;</code>
         */
        public RtTimeOrBuilder getDateTimeOrBuilder() {
            return dateTime_ == null ? RtTime.getDefaultInstance() : dateTime_;
        }

        public static final int TIME_ZONE_FIELD_NUMBER = 2;
        private int timeZone_;
        /**
         * <code>required sfixed32 time_zone = 2;</code>
         */
        public boolean hasTimeZone() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required sfixed32 time_zone = 2;</code>
         */
        public int getTimeZone() {
            return timeZone_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasDateTime()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasTimeZone()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!getDateTime().isInitialized()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, getDateTime());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeSFixed32(2, timeZone_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getDateTime());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSFixed32Size(2, timeZone_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof DateTime)) {
                return super.equals(obj);
            }
            DateTime other = (DateTime) obj;

            boolean result = true;
            result = result && (hasDateTime() == other.hasDateTime());
            if (hasDateTime()) {
                result = result && getDateTime()
                        .equals(other.getDateTime());
            }
            result = result && (hasTimeZone() == other.hasTimeZone());
            if (hasTimeZone()) {
                result = result && (getTimeZone()
                        == other.getTimeZone());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasDateTime()) {
                hash = (37 * hash) + DATE_TIME_FIELD_NUMBER;
                hash = (53 * hash) + getDateTime().hashCode();
            }
            if (hasTimeZone()) {
                hash = (37 * hash) + TIME_ZONE_FIELD_NUMBER;
                hash = (53 * hash) + getTimeZone();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static DateTime parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DateTime parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DateTime parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DateTime parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DateTime parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static DateTime parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static DateTime parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static DateTime parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static DateTime parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static DateTime parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(DateTime prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code DateTime}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:DateTime)
                DateTimeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return RealtimeData.internal_static_DateTime_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return RealtimeData.internal_static_DateTime_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                DateTime.class, Builder.class);
            }

            // Construct using RealtimeData.DateTime.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getDateTimeFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                if (dateTimeBuilder_ == null) {
                    dateTime_ = null;
                } else {
                    dateTimeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                timeZone_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return RealtimeData.internal_static_DateTime_descriptor;
            }

            public DateTime getDefaultInstanceForType() {
                return DateTime.getDefaultInstance();
            }

            public DateTime build() {
                DateTime result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public DateTime buildPartial() {
                DateTime result = new DateTime(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                if (dateTimeBuilder_ == null) {
                    result.dateTime_ = dateTime_;
                } else {
                    result.dateTime_ = dateTimeBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.timeZone_ = timeZone_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof DateTime) {
                    return mergeFrom((DateTime)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(DateTime other) {
                if (other == DateTime.getDefaultInstance()) return this;
                if (other.hasDateTime()) {
                    mergeDateTime(other.getDateTime());
                }
                if (other.hasTimeZone()) {
                    setTimeZone(other.getTimeZone());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasDateTime()) {
                    return false;
                }
                if (!hasTimeZone()) {
                    return false;
                }
                if (!getDateTime().isInitialized()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                DateTime parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (DateTime) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private RtTime dateTime_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtTime, RtTime.Builder, RtTimeOrBuilder> dateTimeBuilder_;
            /**
             * <code>required .RtTime date_time = 1;</code>
             */
            public boolean hasDateTime() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required .RtTime date_time = 1;</code>
             */
            public RtTime getDateTime() {
                if (dateTimeBuilder_ == null) {
                    return dateTime_ == null ? RtTime.getDefaultInstance() : dateTime_;
                } else {
                    return dateTimeBuilder_.getMessage();
                }
            }
            /**
             * <code>required .RtTime date_time = 1;</code>
             */
            public Builder setDateTime(RtTime value) {
                if (dateTimeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    dateTime_ = value;
                    onChanged();
                } else {
                    dateTimeBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }
            /**
             * <code>required .RtTime date_time = 1;</code>
             */
            public Builder setDateTime(
                    RtTime.Builder builderForValue) {
                if (dateTimeBuilder_ == null) {
                    dateTime_ = builderForValue.build();
                    onChanged();
                } else {
                    dateTimeBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                return this;
            }
            /**
             * <code>required .RtTime date_time = 1;</code>
             */
            public Builder mergeDateTime(RtTime value) {
                if (dateTimeBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001) &&
                            dateTime_ != null &&
                            dateTime_ != RtTime.getDefaultInstance()) {
                        dateTime_ =
                                RtTime.newBuilder(dateTime_).mergeFrom(value).buildPartial();
                    } else {
                        dateTime_ = value;
                    }
                    onChanged();
                } else {
                    dateTimeBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }
            /**
             * <code>required .RtTime date_time = 1;</code>
             */
            public Builder clearDateTime() {
                if (dateTimeBuilder_ == null) {
                    dateTime_ = null;
                    onChanged();
                } else {
                    dateTimeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }
            /**
             * <code>required .RtTime date_time = 1;</code>
             */
            public RtTime.Builder getDateTimeBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getDateTimeFieldBuilder().getBuilder();
            }
            /**
             * <code>required .RtTime date_time = 1;</code>
             */
            public RtTimeOrBuilder getDateTimeOrBuilder() {
                if (dateTimeBuilder_ != null) {
                    return dateTimeBuilder_.getMessageOrBuilder();
                } else {
                    return dateTime_ == null ?
                            RtTime.getDefaultInstance() : dateTime_;
                }
            }
            /**
             * <code>required .RtTime date_time = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtTime, RtTime.Builder, RtTimeOrBuilder>
            getDateTimeFieldBuilder() {
                if (dateTimeBuilder_ == null) {
                    dateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            RtTime, RtTime.Builder, RtTimeOrBuilder>(
                            getDateTime(),
                            getParentForChildren(),
                            isClean());
                    dateTime_ = null;
                }
                return dateTimeBuilder_;
            }

            private int timeZone_ ;
            /**
             * <code>required sfixed32 time_zone = 2;</code>
             */
            public boolean hasTimeZone() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>required sfixed32 time_zone = 2;</code>
             */
            public int getTimeZone() {
                return timeZone_;
            }
            /**
             * <code>required sfixed32 time_zone = 2;</code>
             */
            public Builder setTimeZone(int value) {
                bitField0_ |= 0x00000002;
                timeZone_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required sfixed32 time_zone = 2;</code>
             */
            public Builder clearTimeZone() {
                bitField0_ = (bitField0_ & ~0x00000002);
                timeZone_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:DateTime)
        }

        // @@protoc_insertion_point(class_scope:DateTime)
        private static final DateTime DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new DateTime();
        }

        public static DateTime getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated public static final com.google.protobuf.Parser<DateTime>
                PARSER = new com.google.protobuf.AbstractParser<DateTime>() {
            public DateTime parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new DateTime(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<DateTime> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<DateTime> getParserForType() {
            return PARSER;
        }

        public DateTime getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RtBatteryOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RtBattery)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *0~9
         * </pre>
         *
         * <code>required fixed32 level = 1;</code>
         */
        boolean hasLevel();
        /**
         * <pre>
         *0~9
         * </pre>
         *
         * <code>required fixed32 level = 1;</code>
         */
        int getLevel();

        /**
         * <code>required bool charging = 2;</code>
         */
        boolean hasCharging();
        /**
         * <code>required bool charging = 2;</code>
         */
        boolean getCharging();
    }
    /**
     * Protobuf type {@code RtBattery}
     */
    public  static final class RtBattery extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RtBattery)
            RtBatteryOrBuilder {
        // Use RtBattery.newBuilder() to construct.
        private RtBattery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RtBattery() {
            level_ = 0;
            charging_ = false;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RtBattery(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 13: {
                            bitField0_ |= 0x00000001;
                            level_ = input.readFixed32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            charging_ = input.readBool();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return RealtimeData.internal_static_RtBattery_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return RealtimeData.internal_static_RtBattery_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RtBattery.class, Builder.class);
        }

        private int bitField0_;
        public static final int LEVEL_FIELD_NUMBER = 1;
        private int level_;
        /**
         * <pre>
         *0~9
         * </pre>
         *
         * <code>required fixed32 level = 1;</code>
         */
        public boolean hasLevel() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         *0~9
         * </pre>
         *
         * <code>required fixed32 level = 1;</code>
         */
        public int getLevel() {
            return level_;
        }

        public static final int CHARGING_FIELD_NUMBER = 2;
        private boolean charging_;
        /**
         * <code>required bool charging = 2;</code>
         */
        public boolean hasCharging() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bool charging = 2;</code>
         */
        public boolean getCharging() {
            return charging_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasLevel()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasCharging()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeFixed32(1, level_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBool(2, charging_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, level_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(2, charging_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof RtBattery)) {
                return super.equals(obj);
            }
            RtBattery other = (RtBattery) obj;

            boolean result = true;
            result = result && (hasLevel() == other.hasLevel());
            if (hasLevel()) {
                result = result && (getLevel()
                        == other.getLevel());
            }
            result = result && (hasCharging() == other.hasCharging());
            if (hasCharging()) {
                result = result && (getCharging()
                        == other.getCharging());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasLevel()) {
                hash = (37 * hash) + LEVEL_FIELD_NUMBER;
                hash = (53 * hash) + getLevel();
            }
            if (hasCharging()) {
                hash = (37 * hash) + CHARGING_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getCharging());
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static RtBattery parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtBattery parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtBattery parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtBattery parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtBattery parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtBattery parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtBattery parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static RtBattery parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtBattery parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtBattery parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(RtBattery prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code RtBattery}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RtBattery)
                RtBatteryOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return RealtimeData.internal_static_RtBattery_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return RealtimeData.internal_static_RtBattery_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RtBattery.class, Builder.class);
            }

            // Construct using RealtimeData.RtBattery.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                level_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                charging_ = false;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return RealtimeData.internal_static_RtBattery_descriptor;
            }

            public RtBattery getDefaultInstanceForType() {
                return RtBattery.getDefaultInstance();
            }

            public RtBattery build() {
                RtBattery result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RtBattery buildPartial() {
                RtBattery result = new RtBattery(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.level_ = level_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.charging_ = charging_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RtBattery) {
                    return mergeFrom((RtBattery)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RtBattery other) {
                if (other == RtBattery.getDefaultInstance()) return this;
                if (other.hasLevel()) {
                    setLevel(other.getLevel());
                }
                if (other.hasCharging()) {
                    setCharging(other.getCharging());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasLevel()) {
                    return false;
                }
                if (!hasCharging()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RtBattery parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RtBattery) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private int level_ ;
            /**
             * <pre>
             *0~9
             * </pre>
             *
             * <code>required fixed32 level = 1;</code>
             */
            public boolean hasLevel() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <pre>
             *0~9
             * </pre>
             *
             * <code>required fixed32 level = 1;</code>
             */
            public int getLevel() {
                return level_;
            }
            /**
             * <pre>
             *0~9
             * </pre>
             *
             * <code>required fixed32 level = 1;</code>
             */
            public Builder setLevel(int value) {
                bitField0_ |= 0x00000001;
                level_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *0~9
             * </pre>
             *
             * <code>required fixed32 level = 1;</code>
             */
            public Builder clearLevel() {
                bitField0_ = (bitField0_ & ~0x00000001);
                level_ = 0;
                onChanged();
                return this;
            }

            private boolean charging_ ;
            /**
             * <code>required bool charging = 2;</code>
             */
            public boolean hasCharging() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>required bool charging = 2;</code>
             */
            public boolean getCharging() {
                return charging_;
            }
            /**
             * <code>required bool charging = 2;</code>
             */
            public Builder setCharging(boolean value) {
                bitField0_ |= 0x00000002;
                charging_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required bool charging = 2;</code>
             */
            public Builder clearCharging() {
                bitField0_ = (bitField0_ & ~0x00000002);
                charging_ = false;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:RtBattery)
        }

        // @@protoc_insertion_point(class_scope:RtBattery)
        private static final RtBattery DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new RtBattery();
        }

        public static RtBattery getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated public static final com.google.protobuf.Parser<RtBattery>
                PARSER = new com.google.protobuf.AbstractParser<RtBattery>() {
            public RtBattery parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RtBattery(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RtBattery> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RtBattery> getParserForType() {
            return PARSER;
        }

        public RtBattery getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RtHealthOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RtHealth)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required fixed32 steps = 1;</code>
         */
        boolean hasSteps();
        /**
         * <code>required fixed32 steps = 1;</code>
         */
        int getSteps();

        /**
         * <code>required fixed32 distance = 2;</code>
         */
        boolean hasDistance();
        /**
         * <code>required fixed32 distance = 2;</code>
         */
        int getDistance();

        /**
         * <code>required fixed32 calorie = 3;</code>
         */
        boolean hasCalorie();
        /**
         * <code>required fixed32 calorie = 3;</code>
         */
        int getCalorie();
    }
    /**
     * Protobuf type {@code RtHealth}
     */
    public  static final class RtHealth extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RtHealth)
            RtHealthOrBuilder {
        // Use RtHealth.newBuilder() to construct.
        private RtHealth(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RtHealth() {
            steps_ = 0;
            distance_ = 0;
            calorie_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RtHealth(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 13: {
                            bitField0_ |= 0x00000001;
                            steps_ = input.readFixed32();
                            break;
                        }
                        case 21: {
                            bitField0_ |= 0x00000002;
                            distance_ = input.readFixed32();
                            break;
                        }
                        case 29: {
                            bitField0_ |= 0x00000004;
                            calorie_ = input.readFixed32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return RealtimeData.internal_static_RtHealth_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return RealtimeData.internal_static_RtHealth_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RtHealth.class, Builder.class);
        }

        private int bitField0_;
        public static final int STEPS_FIELD_NUMBER = 1;
        private int steps_;
        /**
         * <code>required fixed32 steps = 1;</code>
         */
        public boolean hasSteps() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required fixed32 steps = 1;</code>
         */
        public int getSteps() {
            return steps_;
        }

        public static final int DISTANCE_FIELD_NUMBER = 2;
        private int distance_;
        /**
         * <code>required fixed32 distance = 2;</code>
         */
        public boolean hasDistance() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required fixed32 distance = 2;</code>
         */
        public int getDistance() {
            return distance_;
        }

        public static final int CALORIE_FIELD_NUMBER = 3;
        private int calorie_;
        /**
         * <code>required fixed32 calorie = 3;</code>
         */
        public boolean hasCalorie() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required fixed32 calorie = 3;</code>
         */
        public int getCalorie() {
            return calorie_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasSteps()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasDistance()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasCalorie()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeFixed32(1, steps_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeFixed32(2, distance_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeFixed32(3, calorie_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, steps_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, distance_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, calorie_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof RtHealth)) {
                return super.equals(obj);
            }
            RtHealth other = (RtHealth) obj;

            boolean result = true;
            result = result && (hasSteps() == other.hasSteps());
            if (hasSteps()) {
                result = result && (getSteps()
                        == other.getSteps());
            }
            result = result && (hasDistance() == other.hasDistance());
            if (hasDistance()) {
                result = result && (getDistance()
                        == other.getDistance());
            }
            result = result && (hasCalorie() == other.hasCalorie());
            if (hasCalorie()) {
                result = result && (getCalorie()
                        == other.getCalorie());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasSteps()) {
                hash = (37 * hash) + STEPS_FIELD_NUMBER;
                hash = (53 * hash) + getSteps();
            }
            if (hasDistance()) {
                hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
                hash = (53 * hash) + getDistance();
            }
            if (hasCalorie()) {
                hash = (37 * hash) + CALORIE_FIELD_NUMBER;
                hash = (53 * hash) + getCalorie();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static RtHealth parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtHealth parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtHealth parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtHealth parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtHealth parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtHealth parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtHealth parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static RtHealth parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtHealth parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtHealth parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(RtHealth prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code RtHealth}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RtHealth)
                RtHealthOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return RealtimeData.internal_static_RtHealth_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return RealtimeData.internal_static_RtHealth_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RtHealth.class, Builder.class);
            }

            // Construct using RealtimeData.RtHealth.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                steps_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                distance_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                calorie_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return RealtimeData.internal_static_RtHealth_descriptor;
            }

            public RtHealth getDefaultInstanceForType() {
                return RtHealth.getDefaultInstance();
            }

            public RtHealth build() {
                RtHealth result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RtHealth buildPartial() {
                RtHealth result = new RtHealth(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.steps_ = steps_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.distance_ = distance_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.calorie_ = calorie_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RtHealth) {
                    return mergeFrom((RtHealth)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RtHealth other) {
                if (other == RtHealth.getDefaultInstance()) return this;
                if (other.hasSteps()) {
                    setSteps(other.getSteps());
                }
                if (other.hasDistance()) {
                    setDistance(other.getDistance());
                }
                if (other.hasCalorie()) {
                    setCalorie(other.getCalorie());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasSteps()) {
                    return false;
                }
                if (!hasDistance()) {
                    return false;
                }
                if (!hasCalorie()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RtHealth parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RtHealth) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private int steps_ ;
            /**
             * <code>required fixed32 steps = 1;</code>
             */
            public boolean hasSteps() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required fixed32 steps = 1;</code>
             */
            public int getSteps() {
                return steps_;
            }
            /**
             * <code>required fixed32 steps = 1;</code>
             */
            public Builder setSteps(int value) {
                bitField0_ |= 0x00000001;
                steps_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required fixed32 steps = 1;</code>
             */
            public Builder clearSteps() {
                bitField0_ = (bitField0_ & ~0x00000001);
                steps_ = 0;
                onChanged();
                return this;
            }

            private int distance_ ;
            /**
             * <code>required fixed32 distance = 2;</code>
             */
            public boolean hasDistance() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>required fixed32 distance = 2;</code>
             */
            public int getDistance() {
                return distance_;
            }
            /**
             * <code>required fixed32 distance = 2;</code>
             */
            public Builder setDistance(int value) {
                bitField0_ |= 0x00000002;
                distance_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required fixed32 distance = 2;</code>
             */
            public Builder clearDistance() {
                bitField0_ = (bitField0_ & ~0x00000002);
                distance_ = 0;
                onChanged();
                return this;
            }

            private int calorie_ ;
            /**
             * <code>required fixed32 calorie = 3;</code>
             */
            public boolean hasCalorie() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>required fixed32 calorie = 3;</code>
             */
            public int getCalorie() {
                return calorie_;
            }
            /**
             * <code>required fixed32 calorie = 3;</code>
             */
            public Builder setCalorie(int value) {
                bitField0_ |= 0x00000004;
                calorie_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required fixed32 calorie = 3;</code>
             */
            public Builder clearCalorie() {
                bitField0_ = (bitField0_ & ~0x00000004);
                calorie_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:RtHealth)
        }

        // @@protoc_insertion_point(class_scope:RtHealth)
        private static final RtHealth DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new RtHealth();
        }

        public static RtHealth getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated public static final com.google.protobuf.Parser<RtHealth>
                PARSER = new com.google.protobuf.AbstractParser<RtHealth>() {
            public RtHealth parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RtHealth(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RtHealth> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RtHealth> getParserForType() {
            return PARSER;
        }

        public RtHealth getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RtGNSSOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RtGNSS)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required float longitude = 1;</code>
         */
        boolean hasLongitude();
        /**
         * <code>required float longitude = 1;</code>
         */
        float getLongitude();

        /**
         * <code>required float latitude = 2;</code>
         */
        boolean hasLatitude();
        /**
         * <code>required float latitude = 2;</code>
         */
        float getLatitude();

        /**
         * <pre>
         * m/s
         * </pre>
         *
         * <code>required float speed = 3;</code>
         */
        boolean hasSpeed();
        /**
         * <pre>
         * m/s
         * </pre>
         *
         * <code>required float speed = 3;</code>
         */
        float getSpeed();

        /**
         * <pre>
         * m
         * </pre>
         *
         * <code>required float altitude = 4;</code>
         */
        boolean hasAltitude();
        /**
         * <pre>
         * m
         * </pre>
         *
         * <code>required float altitude = 4;</code>
         */
        float getAltitude();
    }
    /**
     * Protobuf type {@code RtGNSS}
     */
    public  static final class RtGNSS extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RtGNSS)
            RtGNSSOrBuilder {
        // Use RtGNSS.newBuilder() to construct.
        private RtGNSS(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RtGNSS() {
            longitude_ = 0F;
            latitude_ = 0F;
            speed_ = 0F;
            altitude_ = 0F;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RtGNSS(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 13: {
                            bitField0_ |= 0x00000001;
                            longitude_ = input.readFloat();
                            break;
                        }
                        case 21: {
                            bitField0_ |= 0x00000002;
                            latitude_ = input.readFloat();
                            break;
                        }
                        case 29: {
                            bitField0_ |= 0x00000004;
                            speed_ = input.readFloat();
                            break;
                        }
                        case 37: {
                            bitField0_ |= 0x00000008;
                            altitude_ = input.readFloat();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return RealtimeData.internal_static_RtGNSS_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return RealtimeData.internal_static_RtGNSS_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RtGNSS.class, Builder.class);
        }

        private int bitField0_;
        public static final int LONGITUDE_FIELD_NUMBER = 1;
        private float longitude_;
        /**
         * <code>required float longitude = 1;</code>
         */
        public boolean hasLongitude() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required float longitude = 1;</code>
         */
        public float getLongitude() {
            return longitude_;
        }

        public static final int LATITUDE_FIELD_NUMBER = 2;
        private float latitude_;
        /**
         * <code>required float latitude = 2;</code>
         */
        public boolean hasLatitude() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required float latitude = 2;</code>
         */
        public float getLatitude() {
            return latitude_;
        }

        public static final int SPEED_FIELD_NUMBER = 3;
        private float speed_;
        /**
         * <pre>
         * m/s
         * </pre>
         *
         * <code>required float speed = 3;</code>
         */
        public boolean hasSpeed() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <pre>
         * m/s
         * </pre>
         *
         * <code>required float speed = 3;</code>
         */
        public float getSpeed() {
            return speed_;
        }

        public static final int ALTITUDE_FIELD_NUMBER = 4;
        private float altitude_;
        /**
         * <pre>
         * m
         * </pre>
         *
         * <code>required float altitude = 4;</code>
         */
        public boolean hasAltitude() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <pre>
         * m
         * </pre>
         *
         * <code>required float altitude = 4;</code>
         */
        public float getAltitude() {
            return altitude_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasLongitude()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLatitude()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasSpeed()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasAltitude()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeFloat(1, longitude_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeFloat(2, latitude_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeFloat(3, speed_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeFloat(4, altitude_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(1, longitude_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(2, latitude_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(3, speed_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(4, altitude_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof RtGNSS)) {
                return super.equals(obj);
            }
            RtGNSS other = (RtGNSS) obj;

            boolean result = true;
            result = result && (hasLongitude() == other.hasLongitude());
            if (hasLongitude()) {
                result = result && (
                        Float.floatToIntBits(getLongitude())
                                == Float.floatToIntBits(
                                other.getLongitude()));
            }
            result = result && (hasLatitude() == other.hasLatitude());
            if (hasLatitude()) {
                result = result && (
                        Float.floatToIntBits(getLatitude())
                                == Float.floatToIntBits(
                                other.getLatitude()));
            }
            result = result && (hasSpeed() == other.hasSpeed());
            if (hasSpeed()) {
                result = result && (
                        Float.floatToIntBits(getSpeed())
                                == Float.floatToIntBits(
                                other.getSpeed()));
            }
            result = result && (hasAltitude() == other.hasAltitude());
            if (hasAltitude()) {
                result = result && (
                        Float.floatToIntBits(getAltitude())
                                == Float.floatToIntBits(
                                other.getAltitude()));
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasLongitude()) {
                hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
                hash = (53 * hash) + Float.floatToIntBits(
                        getLongitude());
            }
            if (hasLatitude()) {
                hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
                hash = (53 * hash) + Float.floatToIntBits(
                        getLatitude());
            }
            if (hasSpeed()) {
                hash = (37 * hash) + SPEED_FIELD_NUMBER;
                hash = (53 * hash) + Float.floatToIntBits(
                        getSpeed());
            }
            if (hasAltitude()) {
                hash = (37 * hash) + ALTITUDE_FIELD_NUMBER;
                hash = (53 * hash) + Float.floatToIntBits(
                        getAltitude());
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static RtGNSS parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtGNSS parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtGNSS parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtGNSS parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtGNSS parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtGNSS parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtGNSS parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static RtGNSS parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtGNSS parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtGNSS parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(RtGNSS prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code RtGNSS}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RtGNSS)
                RtGNSSOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return RealtimeData.internal_static_RtGNSS_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return RealtimeData.internal_static_RtGNSS_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RtGNSS.class, Builder.class);
            }

            // Construct using RealtimeData.RtGNSS.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                longitude_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000001);
                latitude_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000002);
                speed_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000004);
                altitude_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return RealtimeData.internal_static_RtGNSS_descriptor;
            }

            public RtGNSS getDefaultInstanceForType() {
                return RtGNSS.getDefaultInstance();
            }

            public RtGNSS build() {
                RtGNSS result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RtGNSS buildPartial() {
                RtGNSS result = new RtGNSS(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.longitude_ = longitude_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.latitude_ = latitude_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.speed_ = speed_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.altitude_ = altitude_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RtGNSS) {
                    return mergeFrom((RtGNSS)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RtGNSS other) {
                if (other == RtGNSS.getDefaultInstance()) return this;
                if (other.hasLongitude()) {
                    setLongitude(other.getLongitude());
                }
                if (other.hasLatitude()) {
                    setLatitude(other.getLatitude());
                }
                if (other.hasSpeed()) {
                    setSpeed(other.getSpeed());
                }
                if (other.hasAltitude()) {
                    setAltitude(other.getAltitude());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasLongitude()) {
                    return false;
                }
                if (!hasLatitude()) {
                    return false;
                }
                if (!hasSpeed()) {
                    return false;
                }
                if (!hasAltitude()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RtGNSS parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RtGNSS) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private float longitude_ ;
            /**
             * <code>required float longitude = 1;</code>
             */
            public boolean hasLongitude() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required float longitude = 1;</code>
             */
            public float getLongitude() {
                return longitude_;
            }
            /**
             * <code>required float longitude = 1;</code>
             */
            public Builder setLongitude(float value) {
                bitField0_ |= 0x00000001;
                longitude_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required float longitude = 1;</code>
             */
            public Builder clearLongitude() {
                bitField0_ = (bitField0_ & ~0x00000001);
                longitude_ = 0F;
                onChanged();
                return this;
            }

            private float latitude_ ;
            /**
             * <code>required float latitude = 2;</code>
             */
            public boolean hasLatitude() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>required float latitude = 2;</code>
             */
            public float getLatitude() {
                return latitude_;
            }
            /**
             * <code>required float latitude = 2;</code>
             */
            public Builder setLatitude(float value) {
                bitField0_ |= 0x00000002;
                latitude_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required float latitude = 2;</code>
             */
            public Builder clearLatitude() {
                bitField0_ = (bitField0_ & ~0x00000002);
                latitude_ = 0F;
                onChanged();
                return this;
            }

            private float speed_ ;
            /**
             * <pre>
             * m/s
             * </pre>
             *
             * <code>required float speed = 3;</code>
             */
            public boolean hasSpeed() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <pre>
             * m/s
             * </pre>
             *
             * <code>required float speed = 3;</code>
             */
            public float getSpeed() {
                return speed_;
            }
            /**
             * <pre>
             * m/s
             * </pre>
             *
             * <code>required float speed = 3;</code>
             */
            public Builder setSpeed(float value) {
                bitField0_ |= 0x00000004;
                speed_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * m/s
             * </pre>
             *
             * <code>required float speed = 3;</code>
             */
            public Builder clearSpeed() {
                bitField0_ = (bitField0_ & ~0x00000004);
                speed_ = 0F;
                onChanged();
                return this;
            }

            private float altitude_ ;
            /**
             * <pre>
             * m
             * </pre>
             *
             * <code>required float altitude = 4;</code>
             */
            public boolean hasAltitude() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <pre>
             * m
             * </pre>
             *
             * <code>required float altitude = 4;</code>
             */
            public float getAltitude() {
                return altitude_;
            }
            /**
             * <pre>
             * m
             * </pre>
             *
             * <code>required float altitude = 4;</code>
             */
            public Builder setAltitude(float value) {
                bitField0_ |= 0x00000008;
                altitude_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * m
             * </pre>
             *
             * <code>required float altitude = 4;</code>
             */
            public Builder clearAltitude() {
                bitField0_ = (bitField0_ & ~0x00000008);
                altitude_ = 0F;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:RtGNSS)
        }

        // @@protoc_insertion_point(class_scope:RtGNSS)
        private static final RtGNSS DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new RtGNSS();
        }

        public static RtGNSS getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated public static final com.google.protobuf.Parser<RtGNSS>
                PARSER = new com.google.protobuf.AbstractParser<RtGNSS>() {
            public RtGNSS parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RtGNSS(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RtGNSS> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RtGNSS> getParserForType() {
            return PARSER;
        }

        public RtGNSS getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RtSensorOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RtSensor)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required .SensorOperation operation = 1;</code>
         */
        boolean hasOperation();
        /**
         * <code>required .SensorOperation operation = 1;</code>
         */
        SensorOperation getOperation();

        /**
         * <code>required fixed32 type = 2;</code>
         */
        boolean hasType();
        /**
         * <code>required fixed32 type = 2;</code>
         */
        int getType();
    }
    /**
     * Protobuf type {@code RtSensor}
     */
    public  static final class RtSensor extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RtSensor)
            RtSensorOrBuilder {
        // Use RtSensor.newBuilder() to construct.
        private RtSensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RtSensor() {
            operation_ = 0;
            type_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RtSensor(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            SensorOperation value = SensorOperation.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(1, rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                operation_ = rawValue;
                            }
                            break;
                        }
                        case 21: {
                            bitField0_ |= 0x00000002;
                            type_ = input.readFixed32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return RealtimeData.internal_static_RtSensor_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return RealtimeData.internal_static_RtSensor_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RtSensor.class, Builder.class);
        }

        private int bitField0_;
        public static final int OPERATION_FIELD_NUMBER = 1;
        private int operation_;
        /**
         * <code>required .SensorOperation operation = 1;</code>
         */
        public boolean hasOperation() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .SensorOperation operation = 1;</code>
         */
        public SensorOperation getOperation() {
            SensorOperation result = SensorOperation.valueOf(operation_);
            return result == null ? SensorOperation.SENSOR_START_SYNC : result;
        }

        public static final int TYPE_FIELD_NUMBER = 2;
        private int type_;
        /**
         * <code>required fixed32 type = 2;</code>
         */
        public boolean hasType() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required fixed32 type = 2;</code>
         */
        public int getType() {
            return type_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasOperation()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasType()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, operation_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeFixed32(2, type_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, operation_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, type_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof RtSensor)) {
                return super.equals(obj);
            }
            RtSensor other = (RtSensor) obj;

            boolean result = true;
            result = result && (hasOperation() == other.hasOperation());
            if (hasOperation()) {
                result = result && operation_ == other.operation_;
            }
            result = result && (hasType() == other.hasType());
            if (hasType()) {
                result = result && (getType()
                        == other.getType());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasOperation()) {
                hash = (37 * hash) + OPERATION_FIELD_NUMBER;
                hash = (53 * hash) + operation_;
            }
            if (hasType()) {
                hash = (37 * hash) + TYPE_FIELD_NUMBER;
                hash = (53 * hash) + getType();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static RtSensor parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtSensor parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtSensor parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtSensor parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtSensor parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtSensor parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtSensor parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static RtSensor parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtSensor parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtSensor parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(RtSensor prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code RtSensor}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RtSensor)
                RtSensorOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return RealtimeData.internal_static_RtSensor_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return RealtimeData.internal_static_RtSensor_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RtSensor.class, Builder.class);
            }

            // Construct using RealtimeData.RtSensor.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                operation_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                type_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return RealtimeData.internal_static_RtSensor_descriptor;
            }

            public RtSensor getDefaultInstanceForType() {
                return RtSensor.getDefaultInstance();
            }

            public RtSensor build() {
                RtSensor result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RtSensor buildPartial() {
                RtSensor result = new RtSensor(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.operation_ = operation_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.type_ = type_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RtSensor) {
                    return mergeFrom((RtSensor)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RtSensor other) {
                if (other == RtSensor.getDefaultInstance()) return this;
                if (other.hasOperation()) {
                    setOperation(other.getOperation());
                }
                if (other.hasType()) {
                    setType(other.getType());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasOperation()) {
                    return false;
                }
                if (!hasType()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RtSensor parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RtSensor) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private int operation_ = 0;
            /**
             * <code>required .SensorOperation operation = 1;</code>
             */
            public boolean hasOperation() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required .SensorOperation operation = 1;</code>
             */
            public SensorOperation getOperation() {
                SensorOperation result = SensorOperation.valueOf(operation_);
                return result == null ? SensorOperation.SENSOR_START_SYNC : result;
            }
            /**
             * <code>required .SensorOperation operation = 1;</code>
             */
            public Builder setOperation(SensorOperation value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                operation_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>required .SensorOperation operation = 1;</code>
             */
            public Builder clearOperation() {
                bitField0_ = (bitField0_ & ~0x00000001);
                operation_ = 0;
                onChanged();
                return this;
            }

            private int type_ ;
            /**
             * <code>required fixed32 type = 2;</code>
             */
            public boolean hasType() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>required fixed32 type = 2;</code>
             */
            public int getType() {
                return type_;
            }
            /**
             * <code>required fixed32 type = 2;</code>
             */
            public Builder setType(int value) {
                bitField0_ |= 0x00000002;
                type_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required fixed32 type = 2;</code>
             */
            public Builder clearType() {
                bitField0_ = (bitField0_ & ~0x00000002);
                type_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:RtSensor)
        }

        // @@protoc_insertion_point(class_scope:RtSensor)
        private static final RtSensor DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new RtSensor();
        }

        public static RtSensor getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated public static final com.google.protobuf.Parser<RtSensor>
                PARSER = new com.google.protobuf.AbstractParser<RtSensor>() {
            public RtSensor parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RtSensor(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RtSensor> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RtSensor> getParserForType() {
            return PARSER;
        }

        public RtSensor getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RtSubscriberOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RtSubscriber)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .RtSync time = 1;</code>
         */
        boolean hasTime();
        /**
         * <code>optional .RtSync time = 1;</code>
         */
        RtSync getTime();

        /**
         * <code>optional .RtSync battery = 2;</code>
         */
        boolean hasBattery();
        /**
         * <code>optional .RtSync battery = 2;</code>
         */
        RtSync getBattery();

        /**
         * <code>optional .RtSync health = 3;</code>
         */
        boolean hasHealth();
        /**
         * <code>optional .RtSync health = 3;</code>
         */
        RtSync getHealth();

        /**
         * <code>optional .RtMode mode = 4;</code>
         */
        boolean hasMode();
        /**
         * <code>optional .RtMode mode = 4;</code>
         */
        RtMode getMode();

        /**
         * <code>optional .RtSensor sensor = 5;</code>
         */
        boolean hasSensor();
        /**
         * <code>optional .RtSensor sensor = 5;</code>
         */
        RtSensor getSensor();
        /**
         * <code>optional .RtSensor sensor = 5;</code>
         */
        RtSensorOrBuilder getSensorOrBuilder();
    }
    /**
     * Protobuf type {@code RtSubscriber}
     */
    public  static final class RtSubscriber extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RtSubscriber)
            RtSubscriberOrBuilder {
        // Use RtSubscriber.newBuilder() to construct.
        private RtSubscriber(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RtSubscriber() {
            time_ = 0;
            battery_ = 0;
            health_ = 0;
            mode_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RtSubscriber(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            RtSync value = RtSync.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(1, rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                time_ = rawValue;
                            }
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();
                            RtSync value = RtSync.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(2, rawValue);
                            } else {
                                bitField0_ |= 0x00000002;
                                battery_ = rawValue;
                            }
                            break;
                        }
                        case 24: {
                            int rawValue = input.readEnum();
                            RtSync value = RtSync.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(3, rawValue);
                            } else {
                                bitField0_ |= 0x00000004;
                                health_ = rawValue;
                            }
                            break;
                        }
                        case 32: {
                            int rawValue = input.readEnum();
                            RtMode value = RtMode.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(4, rawValue);
                            } else {
                                bitField0_ |= 0x00000008;
                                mode_ = rawValue;
                            }
                            break;
                        }
                        case 42: {
                            RtSensor.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                                subBuilder = sensor_.toBuilder();
                            }
                            sensor_ = input.readMessage(RtSensor.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(sensor_);
                                sensor_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000010;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return RealtimeData.internal_static_RtSubscriber_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return RealtimeData.internal_static_RtSubscriber_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RtSubscriber.class, Builder.class);
        }

        private int bitField0_;
        public static final int TIME_FIELD_NUMBER = 1;
        private int time_;
        /**
         * <code>optional .RtSync time = 1;</code>
         */
        public boolean hasTime() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .RtSync time = 1;</code>
         */
        public RtSync getTime() {
            RtSync result = RtSync.valueOf(time_);
            return result == null ? RtSync.STOP_ALL : result;
        }

        public static final int BATTERY_FIELD_NUMBER = 2;
        private int battery_;
        /**
         * <code>optional .RtSync battery = 2;</code>
         */
        public boolean hasBattery() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .RtSync battery = 2;</code>
         */
        public RtSync getBattery() {
            RtSync result = RtSync.valueOf(battery_);
            return result == null ? RtSync.STOP_ALL : result;
        }

        public static final int HEALTH_FIELD_NUMBER = 3;
        private int health_;
        /**
         * <code>optional .RtSync health = 3;</code>
         */
        public boolean hasHealth() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .RtSync health = 3;</code>
         */
        public RtSync getHealth() {
            RtSync result = RtSync.valueOf(health_);
            return result == null ? RtSync.STOP_ALL : result;
        }

        public static final int MODE_FIELD_NUMBER = 4;
        private int mode_;
        /**
         * <code>optional .RtMode mode = 4;</code>
         */
        public boolean hasMode() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .RtMode mode = 4;</code>
         */
        public RtMode getMode() {
            RtMode result = RtMode.valueOf(mode_);
            return result == null ? RtMode.RT_MODE_BACK_NORMAL : result;
        }

        public static final int SENSOR_FIELD_NUMBER = 5;
        private RtSensor sensor_;
        /**
         * <code>optional .RtSensor sensor = 5;</code>
         */
        public boolean hasSensor() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .RtSensor sensor = 5;</code>
         */
        public RtSensor getSensor() {
            return sensor_ == null ? RtSensor.getDefaultInstance() : sensor_;
        }
        /**
         * <code>optional .RtSensor sensor = 5;</code>
         */
        public RtSensorOrBuilder getSensorOrBuilder() {
            return sensor_ == null ? RtSensor.getDefaultInstance() : sensor_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (hasSensor()) {
                if (!getSensor().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, time_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeEnum(2, battery_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeEnum(3, health_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeEnum(4, mode_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeMessage(5, getSensor());
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, time_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, battery_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(3, health_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(4, mode_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, getSensor());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof RtSubscriber)) {
                return super.equals(obj);
            }
            RtSubscriber other = (RtSubscriber) obj;

            boolean result = true;
            result = result && (hasTime() == other.hasTime());
            if (hasTime()) {
                result = result && time_ == other.time_;
            }
            result = result && (hasBattery() == other.hasBattery());
            if (hasBattery()) {
                result = result && battery_ == other.battery_;
            }
            result = result && (hasHealth() == other.hasHealth());
            if (hasHealth()) {
                result = result && health_ == other.health_;
            }
            result = result && (hasMode() == other.hasMode());
            if (hasMode()) {
                result = result && mode_ == other.mode_;
            }
            result = result && (hasSensor() == other.hasSensor());
            if (hasSensor()) {
                result = result && getSensor()
                        .equals(other.getSensor());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTime()) {
                hash = (37 * hash) + TIME_FIELD_NUMBER;
                hash = (53 * hash) + time_;
            }
            if (hasBattery()) {
                hash = (37 * hash) + BATTERY_FIELD_NUMBER;
                hash = (53 * hash) + battery_;
            }
            if (hasHealth()) {
                hash = (37 * hash) + HEALTH_FIELD_NUMBER;
                hash = (53 * hash) + health_;
            }
            if (hasMode()) {
                hash = (37 * hash) + MODE_FIELD_NUMBER;
                hash = (53 * hash) + mode_;
            }
            if (hasSensor()) {
                hash = (37 * hash) + SENSOR_FIELD_NUMBER;
                hash = (53 * hash) + getSensor().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static RtSubscriber parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtSubscriber parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtSubscriber parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtSubscriber parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtSubscriber parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtSubscriber parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtSubscriber parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static RtSubscriber parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtSubscriber parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtSubscriber parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(RtSubscriber prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code RtSubscriber}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RtSubscriber)
                RtSubscriberOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return RealtimeData.internal_static_RtSubscriber_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return RealtimeData.internal_static_RtSubscriber_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RtSubscriber.class, Builder.class);
            }

            // Construct using RealtimeData.RtSubscriber.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getSensorFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                time_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                battery_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                health_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                mode_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                if (sensorBuilder_ == null) {
                    sensor_ = null;
                } else {
                    sensorBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return RealtimeData.internal_static_RtSubscriber_descriptor;
            }

            public RtSubscriber getDefaultInstanceForType() {
                return RtSubscriber.getDefaultInstance();
            }

            public RtSubscriber build() {
                RtSubscriber result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RtSubscriber buildPartial() {
                RtSubscriber result = new RtSubscriber(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.time_ = time_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.battery_ = battery_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.health_ = health_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.mode_ = mode_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                if (sensorBuilder_ == null) {
                    result.sensor_ = sensor_;
                } else {
                    result.sensor_ = sensorBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RtSubscriber) {
                    return mergeFrom((RtSubscriber)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RtSubscriber other) {
                if (other == RtSubscriber.getDefaultInstance()) return this;
                if (other.hasTime()) {
                    setTime(other.getTime());
                }
                if (other.hasBattery()) {
                    setBattery(other.getBattery());
                }
                if (other.hasHealth()) {
                    setHealth(other.getHealth());
                }
                if (other.hasMode()) {
                    setMode(other.getMode());
                }
                if (other.hasSensor()) {
                    mergeSensor(other.getSensor());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (hasSensor()) {
                    if (!getSensor().isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RtSubscriber parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RtSubscriber) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private int time_ = 0;
            /**
             * <code>optional .RtSync time = 1;</code>
             */
            public boolean hasTime() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional .RtSync time = 1;</code>
             */
            public RtSync getTime() {
                RtSync result = RtSync.valueOf(time_);
                return result == null ? RtSync.STOP_ALL : result;
            }
            /**
             * <code>optional .RtSync time = 1;</code>
             */
            public Builder setTime(RtSync value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                time_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>optional .RtSync time = 1;</code>
             */
            public Builder clearTime() {
                bitField0_ = (bitField0_ & ~0x00000001);
                time_ = 0;
                onChanged();
                return this;
            }

            private int battery_ = 0;
            /**
             * <code>optional .RtSync battery = 2;</code>
             */
            public boolean hasBattery() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional .RtSync battery = 2;</code>
             */
            public RtSync getBattery() {
                RtSync result = RtSync.valueOf(battery_);
                return result == null ? RtSync.STOP_ALL : result;
            }
            /**
             * <code>optional .RtSync battery = 2;</code>
             */
            public Builder setBattery(RtSync value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                battery_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>optional .RtSync battery = 2;</code>
             */
            public Builder clearBattery() {
                bitField0_ = (bitField0_ & ~0x00000002);
                battery_ = 0;
                onChanged();
                return this;
            }

            private int health_ = 0;
            /**
             * <code>optional .RtSync health = 3;</code>
             */
            public boolean hasHealth() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional .RtSync health = 3;</code>
             */
            public RtSync getHealth() {
                RtSync result = RtSync.valueOf(health_);
                return result == null ? RtSync.STOP_ALL : result;
            }
            /**
             * <code>optional .RtSync health = 3;</code>
             */
            public Builder setHealth(RtSync value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                health_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>optional .RtSync health = 3;</code>
             */
            public Builder clearHealth() {
                bitField0_ = (bitField0_ & ~0x00000004);
                health_ = 0;
                onChanged();
                return this;
            }

            private int mode_ = 0;
            /**
             * <code>optional .RtMode mode = 4;</code>
             */
            public boolean hasMode() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional .RtMode mode = 4;</code>
             */
            public RtMode getMode() {
                RtMode result = RtMode.valueOf(mode_);
                return result == null ? RtMode.RT_MODE_BACK_NORMAL : result;
            }
            /**
             * <code>optional .RtMode mode = 4;</code>
             */
            public Builder setMode(RtMode value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                mode_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>optional .RtMode mode = 4;</code>
             */
            public Builder clearMode() {
                bitField0_ = (bitField0_ & ~0x00000008);
                mode_ = 0;
                onChanged();
                return this;
            }

            private RtSensor sensor_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtSensor, RtSensor.Builder, RtSensorOrBuilder> sensorBuilder_;
            /**
             * <code>optional .RtSensor sensor = 5;</code>
             */
            public boolean hasSensor() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }
            /**
             * <code>optional .RtSensor sensor = 5;</code>
             */
            public RtSensor getSensor() {
                if (sensorBuilder_ == null) {
                    return sensor_ == null ? RtSensor.getDefaultInstance() : sensor_;
                } else {
                    return sensorBuilder_.getMessage();
                }
            }
            /**
             * <code>optional .RtSensor sensor = 5;</code>
             */
            public Builder setSensor(RtSensor value) {
                if (sensorBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    sensor_ = value;
                    onChanged();
                } else {
                    sensorBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000010;
                return this;
            }
            /**
             * <code>optional .RtSensor sensor = 5;</code>
             */
            public Builder setSensor(
                    RtSensor.Builder builderForValue) {
                if (sensorBuilder_ == null) {
                    sensor_ = builderForValue.build();
                    onChanged();
                } else {
                    sensorBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000010;
                return this;
            }
            /**
             * <code>optional .RtSensor sensor = 5;</code>
             */
            public Builder mergeSensor(RtSensor value) {
                if (sensorBuilder_ == null) {
                    if (((bitField0_ & 0x00000010) == 0x00000010) &&
                            sensor_ != null &&
                            sensor_ != RtSensor.getDefaultInstance()) {
                        sensor_ =
                                RtSensor.newBuilder(sensor_).mergeFrom(value).buildPartial();
                    } else {
                        sensor_ = value;
                    }
                    onChanged();
                } else {
                    sensorBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000010;
                return this;
            }
            /**
             * <code>optional .RtSensor sensor = 5;</code>
             */
            public Builder clearSensor() {
                if (sensorBuilder_ == null) {
                    sensor_ = null;
                    onChanged();
                } else {
                    sensorBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }
            /**
             * <code>optional .RtSensor sensor = 5;</code>
             */
            public RtSensor.Builder getSensorBuilder() {
                bitField0_ |= 0x00000010;
                onChanged();
                return getSensorFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .RtSensor sensor = 5;</code>
             */
            public RtSensorOrBuilder getSensorOrBuilder() {
                if (sensorBuilder_ != null) {
                    return sensorBuilder_.getMessageOrBuilder();
                } else {
                    return sensor_ == null ?
                            RtSensor.getDefaultInstance() : sensor_;
                }
            }
            /**
             * <code>optional .RtSensor sensor = 5;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtSensor, RtSensor.Builder, RtSensorOrBuilder>
            getSensorFieldBuilder() {
                if (sensorBuilder_ == null) {
                    sensorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            RtSensor, RtSensor.Builder, RtSensorOrBuilder>(
                            getSensor(),
                            getParentForChildren(),
                            isClean());
                    sensor_ = null;
                }
                return sensorBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:RtSubscriber)
        }

        // @@protoc_insertion_point(class_scope:RtSubscriber)
        private static final RtSubscriber DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new RtSubscriber();
        }

        public static RtSubscriber getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated public static final com.google.protobuf.Parser<RtSubscriber>
                PARSER = new com.google.protobuf.AbstractParser<RtSubscriber>() {
            public RtSubscriber parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RtSubscriber(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RtSubscriber> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RtSubscriber> getParserForType() {
            return PARSER;
        }

        public RtSubscriber getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RtDataOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RtData)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .RtTime time = 1;</code>
         */
        boolean hasTime();
        /**
         * <code>optional .RtTime time = 1;</code>
         */
        RtTime getTime();
        /**
         * <code>optional .RtTime time = 1;</code>
         */
        RtTimeOrBuilder getTimeOrBuilder();

        /**
         * <code>optional .RtBattery battery = 2;</code>
         */
        boolean hasBattery();
        /**
         * <code>optional .RtBattery battery = 2;</code>
         */
        RtBattery getBattery();
        /**
         * <code>optional .RtBattery battery = 2;</code>
         */
        RtBatteryOrBuilder getBatteryOrBuilder();

        /**
         * <code>optional .RtHealth health = 3;</code>
         */
        boolean hasHealth();
        /**
         * <code>optional .RtHealth health = 3;</code>
         */
        RtHealth getHealth();
        /**
         * <code>optional .RtHealth health = 3;</code>
         */
        RtHealthOrBuilder getHealthOrBuilder();

        /**
         * <code>optional .RtKeyEvent key = 4;</code>
         */
        boolean hasKey();
        /**
         * <code>optional .RtKeyEvent key = 4;</code>
         */
        RtKeyEvent getKey();

        /**
         * <code>optional sfixed32 time_zone = 5;</code>
         */
        boolean hasTimeZone();
        /**
         * <code>optional sfixed32 time_zone = 5;</code>
         */
        int getTimeZone();
    }
    /**
     * Protobuf type {@code RtData}
     */
    public  static final class RtData extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RtData)
            RtDataOrBuilder {
        // Use RtData.newBuilder() to construct.
        private RtData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RtData() {
            key_ = 0;
            timeZone_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RtData(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            RtTime.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                                subBuilder = time_.toBuilder();
                            }
                            time_ = input.readMessage(RtTime.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(time_);
                                time_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000001;
                            break;
                        }
                        case 18: {
                            RtBattery.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                                subBuilder = battery_.toBuilder();
                            }
                            battery_ = input.readMessage(RtBattery.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(battery_);
                                battery_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000002;
                            break;
                        }
                        case 26: {
                            RtHealth.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                                subBuilder = health_.toBuilder();
                            }
                            health_ = input.readMessage(RtHealth.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(health_);
                                health_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000004;
                            break;
                        }
                        case 32: {
                            int rawValue = input.readEnum();
                            RtKeyEvent value = RtKeyEvent.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(4, rawValue);
                            } else {
                                bitField0_ |= 0x00000008;
                                key_ = rawValue;
                            }
                            break;
                        }
                        case 45: {
                            bitField0_ |= 0x00000010;
                            timeZone_ = input.readSFixed32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return RealtimeData.internal_static_RtData_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return RealtimeData.internal_static_RtData_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RtData.class, Builder.class);
        }

        private int bitField0_;
        public static final int TIME_FIELD_NUMBER = 1;
        private RtTime time_;
        /**
         * <code>optional .RtTime time = 1;</code>
         */
        public boolean hasTime() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .RtTime time = 1;</code>
         */
        public RtTime getTime() {
            return time_ == null ? RtTime.getDefaultInstance() : time_;
        }
        /**
         * <code>optional .RtTime time = 1;</code>
         */
        public RtTimeOrBuilder getTimeOrBuilder() {
            return time_ == null ? RtTime.getDefaultInstance() : time_;
        }

        public static final int BATTERY_FIELD_NUMBER = 2;
        private RtBattery battery_;
        /**
         * <code>optional .RtBattery battery = 2;</code>
         */
        public boolean hasBattery() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .RtBattery battery = 2;</code>
         */
        public RtBattery getBattery() {
            return battery_ == null ? RtBattery.getDefaultInstance() : battery_;
        }
        /**
         * <code>optional .RtBattery battery = 2;</code>
         */
        public RtBatteryOrBuilder getBatteryOrBuilder() {
            return battery_ == null ? RtBattery.getDefaultInstance() : battery_;
        }

        public static final int HEALTH_FIELD_NUMBER = 3;
        private RtHealth health_;
        /**
         * <code>optional .RtHealth health = 3;</code>
         */
        public boolean hasHealth() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .RtHealth health = 3;</code>
         */
        public RtHealth getHealth() {
            return health_ == null ? RtHealth.getDefaultInstance() : health_;
        }
        /**
         * <code>optional .RtHealth health = 3;</code>
         */
        public RtHealthOrBuilder getHealthOrBuilder() {
            return health_ == null ? RtHealth.getDefaultInstance() : health_;
        }

        public static final int KEY_FIELD_NUMBER = 4;
        private int key_;
        /**
         * <code>optional .RtKeyEvent key = 4;</code>
         */
        public boolean hasKey() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .RtKeyEvent key = 4;</code>
         */
        public RtKeyEvent getKey() {
            RtKeyEvent result = RtKeyEvent.valueOf(key_);
            return result == null ? RtKeyEvent.RT_KEY_CAMERA : result;
        }

        public static final int TIME_ZONE_FIELD_NUMBER = 5;
        private int timeZone_;
        /**
         * <code>optional sfixed32 time_zone = 5;</code>
         */
        public boolean hasTimeZone() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional sfixed32 time_zone = 5;</code>
         */
        public int getTimeZone() {
            return timeZone_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (hasTime()) {
                if (!getTime().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            if (hasBattery()) {
                if (!getBattery().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            if (hasHealth()) {
                if (!getHealth().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, getTime());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeMessage(2, getBattery());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeMessage(3, getHealth());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeEnum(4, key_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeSFixed32(5, timeZone_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTime());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getBattery());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, getHealth());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(4, key_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSFixed32Size(5, timeZone_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof RtData)) {
                return super.equals(obj);
            }
            RtData other = (RtData) obj;

            boolean result = true;
            result = result && (hasTime() == other.hasTime());
            if (hasTime()) {
                result = result && getTime()
                        .equals(other.getTime());
            }
            result = result && (hasBattery() == other.hasBattery());
            if (hasBattery()) {
                result = result && getBattery()
                        .equals(other.getBattery());
            }
            result = result && (hasHealth() == other.hasHealth());
            if (hasHealth()) {
                result = result && getHealth()
                        .equals(other.getHealth());
            }
            result = result && (hasKey() == other.hasKey());
            if (hasKey()) {
                result = result && key_ == other.key_;
            }
            result = result && (hasTimeZone() == other.hasTimeZone());
            if (hasTimeZone()) {
                result = result && (getTimeZone()
                        == other.getTimeZone());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTime()) {
                hash = (37 * hash) + TIME_FIELD_NUMBER;
                hash = (53 * hash) + getTime().hashCode();
            }
            if (hasBattery()) {
                hash = (37 * hash) + BATTERY_FIELD_NUMBER;
                hash = (53 * hash) + getBattery().hashCode();
            }
            if (hasHealth()) {
                hash = (37 * hash) + HEALTH_FIELD_NUMBER;
                hash = (53 * hash) + getHealth().hashCode();
            }
            if (hasKey()) {
                hash = (37 * hash) + KEY_FIELD_NUMBER;
                hash = (53 * hash) + key_;
            }
            if (hasTimeZone()) {
                hash = (37 * hash) + TIME_ZONE_FIELD_NUMBER;
                hash = (53 * hash) + getTimeZone();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static RtData parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtData parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtData parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtData parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtData parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtData parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtData parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static RtData parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtData parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtData parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(RtData prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code RtData}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RtData)
                RtDataOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return RealtimeData.internal_static_RtData_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return RealtimeData.internal_static_RtData_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RtData.class, Builder.class);
            }

            // Construct using RealtimeData.RtData.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getTimeFieldBuilder();
                    getBatteryFieldBuilder();
                    getHealthFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                if (timeBuilder_ == null) {
                    time_ = null;
                } else {
                    timeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                if (batteryBuilder_ == null) {
                    battery_ = null;
                } else {
                    batteryBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                if (healthBuilder_ == null) {
                    health_ = null;
                } else {
                    healthBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                key_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                timeZone_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return RealtimeData.internal_static_RtData_descriptor;
            }

            public RtData getDefaultInstanceForType() {
                return RtData.getDefaultInstance();
            }

            public RtData build() {
                RtData result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RtData buildPartial() {
                RtData result = new RtData(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                if (timeBuilder_ == null) {
                    result.time_ = time_;
                } else {
                    result.time_ = timeBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                if (batteryBuilder_ == null) {
                    result.battery_ = battery_;
                } else {
                    result.battery_ = batteryBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                if (healthBuilder_ == null) {
                    result.health_ = health_;
                } else {
                    result.health_ = healthBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.key_ = key_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.timeZone_ = timeZone_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RtData) {
                    return mergeFrom((RtData)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RtData other) {
                if (other == RtData.getDefaultInstance()) return this;
                if (other.hasTime()) {
                    mergeTime(other.getTime());
                }
                if (other.hasBattery()) {
                    mergeBattery(other.getBattery());
                }
                if (other.hasHealth()) {
                    mergeHealth(other.getHealth());
                }
                if (other.hasKey()) {
                    setKey(other.getKey());
                }
                if (other.hasTimeZone()) {
                    setTimeZone(other.getTimeZone());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (hasTime()) {
                    if (!getTime().isInitialized()) {
                        return false;
                    }
                }
                if (hasBattery()) {
                    if (!getBattery().isInitialized()) {
                        return false;
                    }
                }
                if (hasHealth()) {
                    if (!getHealth().isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RtData parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RtData) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private RtTime time_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtTime, RtTime.Builder, RtTimeOrBuilder> timeBuilder_;
            /**
             * <code>optional .RtTime time = 1;</code>
             */
            public boolean hasTime() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional .RtTime time = 1;</code>
             */
            public RtTime getTime() {
                if (timeBuilder_ == null) {
                    return time_ == null ? RtTime.getDefaultInstance() : time_;
                } else {
                    return timeBuilder_.getMessage();
                }
            }
            /**
             * <code>optional .RtTime time = 1;</code>
             */
            public Builder setTime(RtTime value) {
                if (timeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    time_ = value;
                    onChanged();
                } else {
                    timeBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }
            /**
             * <code>optional .RtTime time = 1;</code>
             */
            public Builder setTime(
                    RtTime.Builder builderForValue) {
                if (timeBuilder_ == null) {
                    time_ = builderForValue.build();
                    onChanged();
                } else {
                    timeBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                return this;
            }
            /**
             * <code>optional .RtTime time = 1;</code>
             */
            public Builder mergeTime(RtTime value) {
                if (timeBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001) &&
                            time_ != null &&
                            time_ != RtTime.getDefaultInstance()) {
                        time_ =
                                RtTime.newBuilder(time_).mergeFrom(value).buildPartial();
                    } else {
                        time_ = value;
                    }
                    onChanged();
                } else {
                    timeBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }
            /**
             * <code>optional .RtTime time = 1;</code>
             */
            public Builder clearTime() {
                if (timeBuilder_ == null) {
                    time_ = null;
                    onChanged();
                } else {
                    timeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }
            /**
             * <code>optional .RtTime time = 1;</code>
             */
            public RtTime.Builder getTimeBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getTimeFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .RtTime time = 1;</code>
             */
            public RtTimeOrBuilder getTimeOrBuilder() {
                if (timeBuilder_ != null) {
                    return timeBuilder_.getMessageOrBuilder();
                } else {
                    return time_ == null ?
                            RtTime.getDefaultInstance() : time_;
                }
            }
            /**
             * <code>optional .RtTime time = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtTime, RtTime.Builder, RtTimeOrBuilder>
            getTimeFieldBuilder() {
                if (timeBuilder_ == null) {
                    timeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            RtTime, RtTime.Builder, RtTimeOrBuilder>(
                            getTime(),
                            getParentForChildren(),
                            isClean());
                    time_ = null;
                }
                return timeBuilder_;
            }

            private RtBattery battery_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtBattery, RtBattery.Builder, RtBatteryOrBuilder> batteryBuilder_;
            /**
             * <code>optional .RtBattery battery = 2;</code>
             */
            public boolean hasBattery() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional .RtBattery battery = 2;</code>
             */
            public RtBattery getBattery() {
                if (batteryBuilder_ == null) {
                    return battery_ == null ? RtBattery.getDefaultInstance() : battery_;
                } else {
                    return batteryBuilder_.getMessage();
                }
            }
            /**
             * <code>optional .RtBattery battery = 2;</code>
             */
            public Builder setBattery(RtBattery value) {
                if (batteryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    battery_ = value;
                    onChanged();
                } else {
                    batteryBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }
            /**
             * <code>optional .RtBattery battery = 2;</code>
             */
            public Builder setBattery(
                    RtBattery.Builder builderForValue) {
                if (batteryBuilder_ == null) {
                    battery_ = builderForValue.build();
                    onChanged();
                } else {
                    batteryBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000002;
                return this;
            }
            /**
             * <code>optional .RtBattery battery = 2;</code>
             */
            public Builder mergeBattery(RtBattery value) {
                if (batteryBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002) &&
                            battery_ != null &&
                            battery_ != RtBattery.getDefaultInstance()) {
                        battery_ =
                                RtBattery.newBuilder(battery_).mergeFrom(value).buildPartial();
                    } else {
                        battery_ = value;
                    }
                    onChanged();
                } else {
                    batteryBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }
            /**
             * <code>optional .RtBattery battery = 2;</code>
             */
            public Builder clearBattery() {
                if (batteryBuilder_ == null) {
                    battery_ = null;
                    onChanged();
                } else {
                    batteryBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }
            /**
             * <code>optional .RtBattery battery = 2;</code>
             */
            public RtBattery.Builder getBatteryBuilder() {
                bitField0_ |= 0x00000002;
                onChanged();
                return getBatteryFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .RtBattery battery = 2;</code>
             */
            public RtBatteryOrBuilder getBatteryOrBuilder() {
                if (batteryBuilder_ != null) {
                    return batteryBuilder_.getMessageOrBuilder();
                } else {
                    return battery_ == null ?
                            RtBattery.getDefaultInstance() : battery_;
                }
            }
            /**
             * <code>optional .RtBattery battery = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtBattery, RtBattery.Builder, RtBatteryOrBuilder>
            getBatteryFieldBuilder() {
                if (batteryBuilder_ == null) {
                    batteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            RtBattery, RtBattery.Builder, RtBatteryOrBuilder>(
                            getBattery(),
                            getParentForChildren(),
                            isClean());
                    battery_ = null;
                }
                return batteryBuilder_;
            }

            private RtHealth health_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtHealth, RtHealth.Builder, RtHealthOrBuilder> healthBuilder_;
            /**
             * <code>optional .RtHealth health = 3;</code>
             */
            public boolean hasHealth() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional .RtHealth health = 3;</code>
             */
            public RtHealth getHealth() {
                if (healthBuilder_ == null) {
                    return health_ == null ? RtHealth.getDefaultInstance() : health_;
                } else {
                    return healthBuilder_.getMessage();
                }
            }
            /**
             * <code>optional .RtHealth health = 3;</code>
             */
            public Builder setHealth(RtHealth value) {
                if (healthBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    health_ = value;
                    onChanged();
                } else {
                    healthBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000004;
                return this;
            }
            /**
             * <code>optional .RtHealth health = 3;</code>
             */
            public Builder setHealth(
                    RtHealth.Builder builderForValue) {
                if (healthBuilder_ == null) {
                    health_ = builderForValue.build();
                    onChanged();
                } else {
                    healthBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000004;
                return this;
            }
            /**
             * <code>optional .RtHealth health = 3;</code>
             */
            public Builder mergeHealth(RtHealth value) {
                if (healthBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004) &&
                            health_ != null &&
                            health_ != RtHealth.getDefaultInstance()) {
                        health_ =
                                RtHealth.newBuilder(health_).mergeFrom(value).buildPartial();
                    } else {
                        health_ = value;
                    }
                    onChanged();
                } else {
                    healthBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000004;
                return this;
            }
            /**
             * <code>optional .RtHealth health = 3;</code>
             */
            public Builder clearHealth() {
                if (healthBuilder_ == null) {
                    health_ = null;
                    onChanged();
                } else {
                    healthBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }
            /**
             * <code>optional .RtHealth health = 3;</code>
             */
            public RtHealth.Builder getHealthBuilder() {
                bitField0_ |= 0x00000004;
                onChanged();
                return getHealthFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .RtHealth health = 3;</code>
             */
            public RtHealthOrBuilder getHealthOrBuilder() {
                if (healthBuilder_ != null) {
                    return healthBuilder_.getMessageOrBuilder();
                } else {
                    return health_ == null ?
                            RtHealth.getDefaultInstance() : health_;
                }
            }
            /**
             * <code>optional .RtHealth health = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtHealth, RtHealth.Builder, RtHealthOrBuilder>
            getHealthFieldBuilder() {
                if (healthBuilder_ == null) {
                    healthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            RtHealth, RtHealth.Builder, RtHealthOrBuilder>(
                            getHealth(),
                            getParentForChildren(),
                            isClean());
                    health_ = null;
                }
                return healthBuilder_;
            }

            private int key_ = 0;
            /**
             * <code>optional .RtKeyEvent key = 4;</code>
             */
            public boolean hasKey() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional .RtKeyEvent key = 4;</code>
             */
            public RtKeyEvent getKey() {
                RtKeyEvent result = RtKeyEvent.valueOf(key_);
                return result == null ? RtKeyEvent.RT_KEY_CAMERA : result;
            }
            /**
             * <code>optional .RtKeyEvent key = 4;</code>
             */
            public Builder setKey(RtKeyEvent value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                key_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>optional .RtKeyEvent key = 4;</code>
             */
            public Builder clearKey() {
                bitField0_ = (bitField0_ & ~0x00000008);
                key_ = 0;
                onChanged();
                return this;
            }

            private int timeZone_ ;
            /**
             * <code>optional sfixed32 time_zone = 5;</code>
             */
            public boolean hasTimeZone() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }
            /**
             * <code>optional sfixed32 time_zone = 5;</code>
             */
            public int getTimeZone() {
                return timeZone_;
            }
            /**
             * <code>optional sfixed32 time_zone = 5;</code>
             */
            public Builder setTimeZone(int value) {
                bitField0_ |= 0x00000010;
                timeZone_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional sfixed32 time_zone = 5;</code>
             */
            public Builder clearTimeZone() {
                bitField0_ = (bitField0_ & ~0x00000010);
                timeZone_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:RtData)
        }

        // @@protoc_insertion_point(class_scope:RtData)
        private static final RtData DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new RtData();
        }

        public static RtData getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated public static final com.google.protobuf.Parser<RtData>
                PARSER = new com.google.protobuf.AbstractParser<RtData>() {
            public RtData parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RtData(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RtData> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RtData> getParserForType() {
            return PARSER;
        }

        public RtData getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RtStateOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RtState)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .RtSync time = 1;</code>
         */
        boolean hasTime();
        /**
         * <code>optional .RtSync time = 1;</code>
         */
        RtSync getTime();

        /**
         * <code>optional .RtSync battery = 2;</code>
         */
        boolean hasBattery();
        /**
         * <code>optional .RtSync battery = 2;</code>
         */
        RtSync getBattery();

        /**
         * <code>optional .RtSync health = 3;</code>
         */
        boolean hasHealth();
        /**
         * <code>optional .RtSync health = 3;</code>
         */
        RtSync getHealth();

        /**
         * <code>optional .RtMode mode = 4;</code>
         */
        boolean hasMode();
        /**
         * <code>optional .RtMode mode = 4;</code>
         */
        RtMode getMode();
    }
    /**
     * Protobuf type {@code RtState}
     */
    public  static final class RtState extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RtState)
            RtStateOrBuilder {
        // Use RtState.newBuilder() to construct.
        private RtState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RtState() {
            time_ = 0;
            battery_ = 0;
            health_ = 0;
            mode_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RtState(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            RtSync value = RtSync.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(1, rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                time_ = rawValue;
                            }
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();
                            RtSync value = RtSync.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(2, rawValue);
                            } else {
                                bitField0_ |= 0x00000002;
                                battery_ = rawValue;
                            }
                            break;
                        }
                        case 24: {
                            int rawValue = input.readEnum();
                            RtSync value = RtSync.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(3, rawValue);
                            } else {
                                bitField0_ |= 0x00000004;
                                health_ = rawValue;
                            }
                            break;
                        }
                        case 32: {
                            int rawValue = input.readEnum();
                            RtMode value = RtMode.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(4, rawValue);
                            } else {
                                bitField0_ |= 0x00000008;
                                mode_ = rawValue;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return RealtimeData.internal_static_RtState_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return RealtimeData.internal_static_RtState_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RtState.class, Builder.class);
        }

        private int bitField0_;
        public static final int TIME_FIELD_NUMBER = 1;
        private int time_;
        /**
         * <code>optional .RtSync time = 1;</code>
         */
        public boolean hasTime() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .RtSync time = 1;</code>
         */
        public RtSync getTime() {
            RtSync result = RtSync.valueOf(time_);
            return result == null ? RtSync.STOP_ALL : result;
        }

        public static final int BATTERY_FIELD_NUMBER = 2;
        private int battery_;
        /**
         * <code>optional .RtSync battery = 2;</code>
         */
        public boolean hasBattery() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .RtSync battery = 2;</code>
         */
        public RtSync getBattery() {
            RtSync result = RtSync.valueOf(battery_);
            return result == null ? RtSync.STOP_ALL : result;
        }

        public static final int HEALTH_FIELD_NUMBER = 3;
        private int health_;
        /**
         * <code>optional .RtSync health = 3;</code>
         */
        public boolean hasHealth() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .RtSync health = 3;</code>
         */
        public RtSync getHealth() {
            RtSync result = RtSync.valueOf(health_);
            return result == null ? RtSync.STOP_ALL : result;
        }

        public static final int MODE_FIELD_NUMBER = 4;
        private int mode_;
        /**
         * <code>optional .RtMode mode = 4;</code>
         */
        public boolean hasMode() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .RtMode mode = 4;</code>
         */
        public RtMode getMode() {
            RtMode result = RtMode.valueOf(mode_);
            return result == null ? RtMode.RT_MODE_BACK_NORMAL : result;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, time_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeEnum(2, battery_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeEnum(3, health_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeEnum(4, mode_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, time_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, battery_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(3, health_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(4, mode_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof RtState)) {
                return super.equals(obj);
            }
            RtState other = (RtState) obj;

            boolean result = true;
            result = result && (hasTime() == other.hasTime());
            if (hasTime()) {
                result = result && time_ == other.time_;
            }
            result = result && (hasBattery() == other.hasBattery());
            if (hasBattery()) {
                result = result && battery_ == other.battery_;
            }
            result = result && (hasHealth() == other.hasHealth());
            if (hasHealth()) {
                result = result && health_ == other.health_;
            }
            result = result && (hasMode() == other.hasMode());
            if (hasMode()) {
                result = result && mode_ == other.mode_;
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTime()) {
                hash = (37 * hash) + TIME_FIELD_NUMBER;
                hash = (53 * hash) + time_;
            }
            if (hasBattery()) {
                hash = (37 * hash) + BATTERY_FIELD_NUMBER;
                hash = (53 * hash) + battery_;
            }
            if (hasHealth()) {
                hash = (37 * hash) + HEALTH_FIELD_NUMBER;
                hash = (53 * hash) + health_;
            }
            if (hasMode()) {
                hash = (37 * hash) + MODE_FIELD_NUMBER;
                hash = (53 * hash) + mode_;
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static RtState parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtState parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtState parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtState parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtState parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtState parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtState parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static RtState parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtState parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtState parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(RtState prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code RtState}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RtState)
                RtStateOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return RealtimeData.internal_static_RtState_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return RealtimeData.internal_static_RtState_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RtState.class, Builder.class);
            }

            // Construct using RealtimeData.RtState.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                time_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                battery_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                health_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                mode_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return RealtimeData.internal_static_RtState_descriptor;
            }

            public RtState getDefaultInstanceForType() {
                return RtState.getDefaultInstance();
            }

            public RtState build() {
                RtState result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RtState buildPartial() {
                RtState result = new RtState(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.time_ = time_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.battery_ = battery_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.health_ = health_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.mode_ = mode_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RtState) {
                    return mergeFrom((RtState)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RtState other) {
                if (other == RtState.getDefaultInstance()) return this;
                if (other.hasTime()) {
                    setTime(other.getTime());
                }
                if (other.hasBattery()) {
                    setBattery(other.getBattery());
                }
                if (other.hasHealth()) {
                    setHealth(other.getHealth());
                }
                if (other.hasMode()) {
                    setMode(other.getMode());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RtState parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RtState) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private int time_ = 0;
            /**
             * <code>optional .RtSync time = 1;</code>
             */
            public boolean hasTime() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional .RtSync time = 1;</code>
             */
            public RtSync getTime() {
                RtSync result = RtSync.valueOf(time_);
                return result == null ? RtSync.STOP_ALL : result;
            }
            /**
             * <code>optional .RtSync time = 1;</code>
             */
            public Builder setTime(RtSync value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                time_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>optional .RtSync time = 1;</code>
             */
            public Builder clearTime() {
                bitField0_ = (bitField0_ & ~0x00000001);
                time_ = 0;
                onChanged();
                return this;
            }

            private int battery_ = 0;
            /**
             * <code>optional .RtSync battery = 2;</code>
             */
            public boolean hasBattery() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional .RtSync battery = 2;</code>
             */
            public RtSync getBattery() {
                RtSync result = RtSync.valueOf(battery_);
                return result == null ? RtSync.STOP_ALL : result;
            }
            /**
             * <code>optional .RtSync battery = 2;</code>
             */
            public Builder setBattery(RtSync value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                battery_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>optional .RtSync battery = 2;</code>
             */
            public Builder clearBattery() {
                bitField0_ = (bitField0_ & ~0x00000002);
                battery_ = 0;
                onChanged();
                return this;
            }

            private int health_ = 0;
            /**
             * <code>optional .RtSync health = 3;</code>
             */
            public boolean hasHealth() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional .RtSync health = 3;</code>
             */
            public RtSync getHealth() {
                RtSync result = RtSync.valueOf(health_);
                return result == null ? RtSync.STOP_ALL : result;
            }
            /**
             * <code>optional .RtSync health = 3;</code>
             */
            public Builder setHealth(RtSync value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                health_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>optional .RtSync health = 3;</code>
             */
            public Builder clearHealth() {
                bitField0_ = (bitField0_ & ~0x00000004);
                health_ = 0;
                onChanged();
                return this;
            }

            private int mode_ = 0;
            /**
             * <code>optional .RtMode mode = 4;</code>
             */
            public boolean hasMode() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional .RtMode mode = 4;</code>
             */
            public RtMode getMode() {
                RtMode result = RtMode.valueOf(mode_);
                return result == null ? RtMode.RT_MODE_BACK_NORMAL : result;
            }
            /**
             * <code>optional .RtMode mode = 4;</code>
             */
            public Builder setMode(RtMode value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                mode_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>optional .RtMode mode = 4;</code>
             */
            public Builder clearMode() {
                bitField0_ = (bitField0_ & ~0x00000008);
                mode_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:RtState)
        }

        // @@protoc_insertion_point(class_scope:RtState)
        private static final RtState DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new RtState();
        }

        public static RtState getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated public static final com.google.protobuf.Parser<RtState>
                PARSER = new com.google.protobuf.AbstractParser<RtState>() {
            public RtState parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RtState(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RtState> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RtState> getParserForType() {
            return PARSER;
        }

        public RtState getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RtSensorDataOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RtSensorData)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required fixed32 type = 1;</code>
         */
        boolean hasType();
        /**
         * <code>required fixed32 type = 1;</code>
         */
        int getType();

        /**
         * <code>required .RtTime time = 2;</code>
         */
        boolean hasTime();
        /**
         * <code>required .RtTime time = 2;</code>
         */
        RtTime getTime();
        /**
         * <code>required .RtTime time = 2;</code>
         */
        RtTimeOrBuilder getTimeOrBuilder();

        /**
         * <code>required fixed32 seq = 3;</code>
         */
        boolean hasSeq();
        /**
         * <code>required fixed32 seq = 3;</code>
         */
        int getSeq();

        /**
         * <code>repeated fixed32 data = 4;</code>
         */
        java.util.List<Integer> getDataList();
        /**
         * <code>repeated fixed32 data = 4;</code>
         */
        int getDataCount();
        /**
         * <code>repeated fixed32 data = 4;</code>
         */
        int getData(int index);
    }
    /**
     * Protobuf type {@code RtSensorData}
     */
    public  static final class RtSensorData extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RtSensorData)
            RtSensorDataOrBuilder {
        // Use RtSensorData.newBuilder() to construct.
        private RtSensorData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RtSensorData() {
            type_ = 0;
            seq_ = 0;
            data_ = java.util.Collections.emptyList();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RtSensorData(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 13: {
                            bitField0_ |= 0x00000001;
                            type_ = input.readFixed32();
                            break;
                        }
                        case 18: {
                            RtTime.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                                subBuilder = time_.toBuilder();
                            }
                            time_ = input.readMessage(RtTime.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(time_);
                                time_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000002;
                            break;
                        }
                        case 29: {
                            bitField0_ |= 0x00000004;
                            seq_ = input.readFixed32();
                            break;
                        }
                        case 37: {
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                                data_ = new java.util.ArrayList<Integer>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            data_.add(input.readFixed32());
                            break;
                        }
                        case 34: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                                data_ = new java.util.ArrayList<Integer>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                data_.add(input.readFixed32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    data_ = java.util.Collections.unmodifiableList(data_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return RealtimeData.internal_static_RtSensorData_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return RealtimeData.internal_static_RtSensorData_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RtSensorData.class, Builder.class);
        }

        private int bitField0_;
        public static final int TYPE_FIELD_NUMBER = 1;
        private int type_;
        /**
         * <code>required fixed32 type = 1;</code>
         */
        public boolean hasType() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required fixed32 type = 1;</code>
         */
        public int getType() {
            return type_;
        }

        public static final int TIME_FIELD_NUMBER = 2;
        private RtTime time_;
        /**
         * <code>required .RtTime time = 2;</code>
         */
        public boolean hasTime() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .RtTime time = 2;</code>
         */
        public RtTime getTime() {
            return time_ == null ? RtTime.getDefaultInstance() : time_;
        }
        /**
         * <code>required .RtTime time = 2;</code>
         */
        public RtTimeOrBuilder getTimeOrBuilder() {
            return time_ == null ? RtTime.getDefaultInstance() : time_;
        }

        public static final int SEQ_FIELD_NUMBER = 3;
        private int seq_;
        /**
         * <code>required fixed32 seq = 3;</code>
         */
        public boolean hasSeq() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required fixed32 seq = 3;</code>
         */
        public int getSeq() {
            return seq_;
        }

        public static final int DATA_FIELD_NUMBER = 4;
        private java.util.List<Integer> data_;
        /**
         * <code>repeated fixed32 data = 4;</code>
         */
        public java.util.List<Integer>
        getDataList() {
            return data_;
        }
        /**
         * <code>repeated fixed32 data = 4;</code>
         */
        public int getDataCount() {
            return data_.size();
        }
        /**
         * <code>repeated fixed32 data = 4;</code>
         */
        public int getData(int index) {
            return data_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasType()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasTime()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasSeq()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!getTime().isInitialized()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeFixed32(1, type_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeMessage(2, getTime());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeFixed32(3, seq_);
            }
            for (int i = 0; i < data_.size(); i++) {
                output.writeFixed32(4, data_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, type_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getTime());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, seq_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getDataList().size();
                size += dataSize;
                size += 1 * getDataList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof RtSensorData)) {
                return super.equals(obj);
            }
            RtSensorData other = (RtSensorData) obj;

            boolean result = true;
            result = result && (hasType() == other.hasType());
            if (hasType()) {
                result = result && (getType()
                        == other.getType());
            }
            result = result && (hasTime() == other.hasTime());
            if (hasTime()) {
                result = result && getTime()
                        .equals(other.getTime());
            }
            result = result && (hasSeq() == other.hasSeq());
            if (hasSeq()) {
                result = result && (getSeq()
                        == other.getSeq());
            }
            result = result && getDataList()
                    .equals(other.getDataList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasType()) {
                hash = (37 * hash) + TYPE_FIELD_NUMBER;
                hash = (53 * hash) + getType();
            }
            if (hasTime()) {
                hash = (37 * hash) + TIME_FIELD_NUMBER;
                hash = (53 * hash) + getTime().hashCode();
            }
            if (hasSeq()) {
                hash = (37 * hash) + SEQ_FIELD_NUMBER;
                hash = (53 * hash) + getSeq();
            }
            if (getDataCount() > 0) {
                hash = (37 * hash) + DATA_FIELD_NUMBER;
                hash = (53 * hash) + getDataList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static RtSensorData parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtSensorData parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtSensorData parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtSensorData parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtSensorData parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtSensorData parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtSensorData parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static RtSensorData parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtSensorData parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtSensorData parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(RtSensorData prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code RtSensorData}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RtSensorData)
                RtSensorDataOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return RealtimeData.internal_static_RtSensorData_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return RealtimeData.internal_static_RtSensorData_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RtSensorData.class, Builder.class);
            }

            // Construct using RealtimeData.RtSensorData.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getTimeFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                type_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                if (timeBuilder_ == null) {
                    time_ = null;
                } else {
                    timeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                seq_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                data_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return RealtimeData.internal_static_RtSensorData_descriptor;
            }

            public RtSensorData getDefaultInstanceForType() {
                return RtSensorData.getDefaultInstance();
            }

            public RtSensorData build() {
                RtSensorData result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RtSensorData buildPartial() {
                RtSensorData result = new RtSensorData(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.type_ = type_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                if (timeBuilder_ == null) {
                    result.time_ = time_;
                } else {
                    result.time_ = timeBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.seq_ = seq_;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    data_ = java.util.Collections.unmodifiableList(data_);
                    bitField0_ = (bitField0_ & ~0x00000008);
                }
                result.data_ = data_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RtSensorData) {
                    return mergeFrom((RtSensorData)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RtSensorData other) {
                if (other == RtSensorData.getDefaultInstance()) return this;
                if (other.hasType()) {
                    setType(other.getType());
                }
                if (other.hasTime()) {
                    mergeTime(other.getTime());
                }
                if (other.hasSeq()) {
                    setSeq(other.getSeq());
                }
                if (!other.data_.isEmpty()) {
                    if (data_.isEmpty()) {
                        data_ = other.data_;
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        ensureDataIsMutable();
                        data_.addAll(other.data_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasType()) {
                    return false;
                }
                if (!hasTime()) {
                    return false;
                }
                if (!hasSeq()) {
                    return false;
                }
                if (!getTime().isInitialized()) {
                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RtSensorData parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RtSensorData) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private int type_ ;
            /**
             * <code>required fixed32 type = 1;</code>
             */
            public boolean hasType() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required fixed32 type = 1;</code>
             */
            public int getType() {
                return type_;
            }
            /**
             * <code>required fixed32 type = 1;</code>
             */
            public Builder setType(int value) {
                bitField0_ |= 0x00000001;
                type_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required fixed32 type = 1;</code>
             */
            public Builder clearType() {
                bitField0_ = (bitField0_ & ~0x00000001);
                type_ = 0;
                onChanged();
                return this;
            }

            private RtTime time_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtTime, RtTime.Builder, RtTimeOrBuilder> timeBuilder_;
            /**
             * <code>required .RtTime time = 2;</code>
             */
            public boolean hasTime() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>required .RtTime time = 2;</code>
             */
            public RtTime getTime() {
                if (timeBuilder_ == null) {
                    return time_ == null ? RtTime.getDefaultInstance() : time_;
                } else {
                    return timeBuilder_.getMessage();
                }
            }
            /**
             * <code>required .RtTime time = 2;</code>
             */
            public Builder setTime(RtTime value) {
                if (timeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    time_ = value;
                    onChanged();
                } else {
                    timeBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }
            /**
             * <code>required .RtTime time = 2;</code>
             */
            public Builder setTime(
                    RtTime.Builder builderForValue) {
                if (timeBuilder_ == null) {
                    time_ = builderForValue.build();
                    onChanged();
                } else {
                    timeBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000002;
                return this;
            }
            /**
             * <code>required .RtTime time = 2;</code>
             */
            public Builder mergeTime(RtTime value) {
                if (timeBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002) &&
                            time_ != null &&
                            time_ != RtTime.getDefaultInstance()) {
                        time_ =
                                RtTime.newBuilder(time_).mergeFrom(value).buildPartial();
                    } else {
                        time_ = value;
                    }
                    onChanged();
                } else {
                    timeBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }
            /**
             * <code>required .RtTime time = 2;</code>
             */
            public Builder clearTime() {
                if (timeBuilder_ == null) {
                    time_ = null;
                    onChanged();
                } else {
                    timeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }
            /**
             * <code>required .RtTime time = 2;</code>
             */
            public RtTime.Builder getTimeBuilder() {
                bitField0_ |= 0x00000002;
                onChanged();
                return getTimeFieldBuilder().getBuilder();
            }
            /**
             * <code>required .RtTime time = 2;</code>
             */
            public RtTimeOrBuilder getTimeOrBuilder() {
                if (timeBuilder_ != null) {
                    return timeBuilder_.getMessageOrBuilder();
                } else {
                    return time_ == null ?
                            RtTime.getDefaultInstance() : time_;
                }
            }
            /**
             * <code>required .RtTime time = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtTime, RtTime.Builder, RtTimeOrBuilder>
            getTimeFieldBuilder() {
                if (timeBuilder_ == null) {
                    timeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            RtTime, RtTime.Builder, RtTimeOrBuilder>(
                            getTime(),
                            getParentForChildren(),
                            isClean());
                    time_ = null;
                }
                return timeBuilder_;
            }

            private int seq_ ;
            /**
             * <code>required fixed32 seq = 3;</code>
             */
            public boolean hasSeq() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>required fixed32 seq = 3;</code>
             */
            public int getSeq() {
                return seq_;
            }
            /**
             * <code>required fixed32 seq = 3;</code>
             */
            public Builder setSeq(int value) {
                bitField0_ |= 0x00000004;
                seq_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required fixed32 seq = 3;</code>
             */
            public Builder clearSeq() {
                bitField0_ = (bitField0_ & ~0x00000004);
                seq_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<Integer> data_ = java.util.Collections.emptyList();
            private void ensureDataIsMutable() {
                if (!((bitField0_ & 0x00000008) == 0x00000008)) {
                    data_ = new java.util.ArrayList<Integer>(data_);
                    bitField0_ |= 0x00000008;
                }
            }
            /**
             * <code>repeated fixed32 data = 4;</code>
             */
            public java.util.List<Integer>
            getDataList() {
                return java.util.Collections.unmodifiableList(data_);
            }
            /**
             * <code>repeated fixed32 data = 4;</code>
             */
            public int getDataCount() {
                return data_.size();
            }
            /**
             * <code>repeated fixed32 data = 4;</code>
             */
            public int getData(int index) {
                return data_.get(index);
            }
            /**
             * <code>repeated fixed32 data = 4;</code>
             */
            public Builder setData(
                    int index, int value) {
                ensureDataIsMutable();
                data_.set(index, value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated fixed32 data = 4;</code>
             */
            public Builder addData(int value) {
                ensureDataIsMutable();
                data_.add(value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated fixed32 data = 4;</code>
             */
            public Builder addAllData(
                    Iterable<? extends Integer> values) {
                ensureDataIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, data_);
                onChanged();
                return this;
            }
            /**
             * <code>repeated fixed32 data = 4;</code>
             */
            public Builder clearData() {
                data_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000008);
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:RtSensorData)
        }

        // @@protoc_insertion_point(class_scope:RtSensorData)
        private static final RtSensorData DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new RtSensorData();
        }

        public static RtSensorData getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated public static final com.google.protobuf.Parser<RtSensorData>
                PARSER = new com.google.protobuf.AbstractParser<RtSensorData>() {
            public RtSensorData parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RtSensorData(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RtSensorData> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RtSensorData> getParserForType() {
            return PARSER;
        }

        public RtSensorData getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RtNotificationOrBuilder extends
            // @@protoc_insertion_point(interface_extends:RtNotification)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .RtData rt_data = 1;</code>
         */
        boolean hasRtData();
        /**
         * <code>optional .RtData rt_data = 1;</code>
         */
        RtData getRtData();
        /**
         * <code>optional .RtData rt_data = 1;</code>
         */
        RtDataOrBuilder getRtDataOrBuilder();

        /**
         * <code>optional .RtState rt_state = 2;</code>
         */
        boolean hasRtState();
        /**
         * <code>optional .RtState rt_state = 2;</code>
         */
        RtState getRtState();
        /**
         * <code>optional .RtState rt_state = 2;</code>
         */
        RtStateOrBuilder getRtStateOrBuilder();

        /**
         * <code>optional .RtSensorData rt_sensordata = 3;</code>
         */
        boolean hasRtSensordata();
        /**
         * <code>optional .RtSensorData rt_sensordata = 3;</code>
         */
        RtSensorData getRtSensordata();
        /**
         * <code>optional .RtSensorData rt_sensordata = 3;</code>
         */
        RtSensorDataOrBuilder getRtSensordataOrBuilder();

        public RtNotification.DataCase getDataCase();
    }
    /**
     * Protobuf type {@code RtNotification}
     */
    public  static final class RtNotification extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:RtNotification)
            RtNotificationOrBuilder {
        // Use RtNotification.newBuilder() to construct.
        private RtNotification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RtNotification() {
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RtNotification(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            RtData.Builder subBuilder = null;
                            if (dataCase_ == 1) {
                                subBuilder = ((RtData) data_).toBuilder();
                            }
                            data_ =
                                    input.readMessage(RtData.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((RtData) data_);
                                data_ = subBuilder.buildPartial();
                            }
                            dataCase_ = 1;
                            break;
                        }
                        case 18: {
                            RtState.Builder subBuilder = null;
                            if (dataCase_ == 2) {
                                subBuilder = ((RtState) data_).toBuilder();
                            }
                            data_ =
                                    input.readMessage(RtState.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((RtState) data_);
                                data_ = subBuilder.buildPartial();
                            }
                            dataCase_ = 2;
                            break;
                        }
                        case 26: {
                            RtSensorData.Builder subBuilder = null;
                            if (dataCase_ == 3) {
                                subBuilder = ((RtSensorData) data_).toBuilder();
                            }
                            data_ =
                                    input.readMessage(RtSensorData.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((RtSensorData) data_);
                                data_ = subBuilder.buildPartial();
                            }
                            dataCase_ = 3;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return RealtimeData.internal_static_RtNotification_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return RealtimeData.internal_static_RtNotification_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RtNotification.class, Builder.class);
        }

        private int bitField0_;
        private int dataCase_ = 0;
        private Object data_;
        public enum DataCase
                implements com.google.protobuf.Internal.EnumLite {
            RT_DATA(1),
            RT_STATE(2),
            RT_SENSORDATA(3),
            DATA_NOT_SET(0);
            private final int value;
            private DataCase(int value) {
                this.value = value;
            }
            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @Deprecated
            public static DataCase valueOf(int value) {
                return forNumber(value);
            }

            public static DataCase forNumber(int value) {
                switch (value) {
                    case 1: return RT_DATA;
                    case 2: return RT_STATE;
                    case 3: return RT_SENSORDATA;
                    case 0: return DATA_NOT_SET;
                    default: return null;
                }
            }
            public int getNumber() {
                return this.value;
            }
        };

        public DataCase
        getDataCase() {
            return DataCase.forNumber(
                    dataCase_);
        }

        public static final int RT_DATA_FIELD_NUMBER = 1;
        /**
         * <code>optional .RtData rt_data = 1;</code>
         */
        public boolean hasRtData() {
            return dataCase_ == 1;
        }
        /**
         * <code>optional .RtData rt_data = 1;</code>
         */
        public RtData getRtData() {
            if (dataCase_ == 1) {
                return (RtData) data_;
            }
            return RtData.getDefaultInstance();
        }
        /**
         * <code>optional .RtData rt_data = 1;</code>
         */
        public RtDataOrBuilder getRtDataOrBuilder() {
            if (dataCase_ == 1) {
                return (RtData) data_;
            }
            return RtData.getDefaultInstance();
        }

        public static final int RT_STATE_FIELD_NUMBER = 2;
        /**
         * <code>optional .RtState rt_state = 2;</code>
         */
        public boolean hasRtState() {
            return dataCase_ == 2;
        }
        /**
         * <code>optional .RtState rt_state = 2;</code>
         */
        public RtState getRtState() {
            if (dataCase_ == 2) {
                return (RtState) data_;
            }
            return RtState.getDefaultInstance();
        }
        /**
         * <code>optional .RtState rt_state = 2;</code>
         */
        public RtStateOrBuilder getRtStateOrBuilder() {
            if (dataCase_ == 2) {
                return (RtState) data_;
            }
            return RtState.getDefaultInstance();
        }

        public static final int RT_SENSORDATA_FIELD_NUMBER = 3;
        /**
         * <code>optional .RtSensorData rt_sensordata = 3;</code>
         */
        public boolean hasRtSensordata() {
            return dataCase_ == 3;
        }
        /**
         * <code>optional .RtSensorData rt_sensordata = 3;</code>
         */
        public RtSensorData getRtSensordata() {
            if (dataCase_ == 3) {
                return (RtSensorData) data_;
            }
            return RtSensorData.getDefaultInstance();
        }
        /**
         * <code>optional .RtSensorData rt_sensordata = 3;</code>
         */
        public RtSensorDataOrBuilder getRtSensordataOrBuilder() {
            if (dataCase_ == 3) {
                return (RtSensorData) data_;
            }
            return RtSensorData.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (hasRtData()) {
                if (!getRtData().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            if (hasRtSensordata()) {
                if (!getRtSensordata().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (dataCase_ == 1) {
                output.writeMessage(1, (RtData) data_);
            }
            if (dataCase_ == 2) {
                output.writeMessage(2, (RtState) data_);
            }
            if (dataCase_ == 3) {
                output.writeMessage(3, (RtSensorData) data_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (dataCase_ == 1) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, (RtData) data_);
            }
            if (dataCase_ == 2) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, (RtState) data_);
            }
            if (dataCase_ == 3) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, (RtSensorData) data_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof RtNotification)) {
                return super.equals(obj);
            }
            RtNotification other = (RtNotification) obj;

            boolean result = true;
            result = result && getDataCase().equals(
                    other.getDataCase());
            if (!result) return false;
            switch (dataCase_) {
                case 1:
                    result = result && getRtData()
                            .equals(other.getRtData());
                    break;
                case 2:
                    result = result && getRtState()
                            .equals(other.getRtState());
                    break;
                case 3:
                    result = result && getRtSensordata()
                            .equals(other.getRtSensordata());
                    break;
                case 0:
                default:
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            switch (dataCase_) {
                case 1:
                    hash = (37 * hash) + RT_DATA_FIELD_NUMBER;
                    hash = (53 * hash) + getRtData().hashCode();
                    break;
                case 2:
                    hash = (37 * hash) + RT_STATE_FIELD_NUMBER;
                    hash = (53 * hash) + getRtState().hashCode();
                    break;
                case 3:
                    hash = (37 * hash) + RT_SENSORDATA_FIELD_NUMBER;
                    hash = (53 * hash) + getRtSensordata().hashCode();
                    break;
                case 0:
                default:
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static RtNotification parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtNotification parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtNotification parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RtNotification parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RtNotification parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtNotification parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtNotification parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static RtNotification parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static RtNotification parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static RtNotification parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(RtNotification prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code RtNotification}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:RtNotification)
                RtNotificationOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return RealtimeData.internal_static_RtNotification_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return RealtimeData.internal_static_RtNotification_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RtNotification.class, Builder.class);
            }

            // Construct using RealtimeData.RtNotification.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                dataCase_ = 0;
                data_ = null;
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return RealtimeData.internal_static_RtNotification_descriptor;
            }

            public RtNotification getDefaultInstanceForType() {
                return RtNotification.getDefaultInstance();
            }

            public RtNotification build() {
                RtNotification result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RtNotification buildPartial() {
                RtNotification result = new RtNotification(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (dataCase_ == 1) {
                    if (rtDataBuilder_ == null) {
                        result.data_ = data_;
                    } else {
                        result.data_ = rtDataBuilder_.build();
                    }
                }
                if (dataCase_ == 2) {
                    if (rtStateBuilder_ == null) {
                        result.data_ = data_;
                    } else {
                        result.data_ = rtStateBuilder_.build();
                    }
                }
                if (dataCase_ == 3) {
                    if (rtSensordataBuilder_ == null) {
                        result.data_ = data_;
                    } else {
                        result.data_ = rtSensordataBuilder_.build();
                    }
                }
                result.bitField0_ = to_bitField0_;
                result.dataCase_ = dataCase_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RtNotification) {
                    return mergeFrom((RtNotification)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RtNotification other) {
                if (other == RtNotification.getDefaultInstance()) return this;
                switch (other.getDataCase()) {
                    case RT_DATA: {
                        mergeRtData(other.getRtData());
                        break;
                    }
                    case RT_STATE: {
                        mergeRtState(other.getRtState());
                        break;
                    }
                    case RT_SENSORDATA: {
                        mergeRtSensordata(other.getRtSensordata());
                        break;
                    }
                    case DATA_NOT_SET: {
                        break;
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (hasRtData()) {
                    if (!getRtData().isInitialized()) {
                        return false;
                    }
                }
                if (hasRtSensordata()) {
                    if (!getRtSensordata().isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RtNotification parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RtNotification) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int dataCase_ = 0;
            private Object data_;
            public DataCase
            getDataCase() {
                return DataCase.forNumber(
                        dataCase_);
            }

            public Builder clearData() {
                dataCase_ = 0;
                data_ = null;
                onChanged();
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.SingleFieldBuilderV3<
                    RtData, RtData.Builder, RtDataOrBuilder> rtDataBuilder_;
            /**
             * <code>optional .RtData rt_data = 1;</code>
             */
            public boolean hasRtData() {
                return dataCase_ == 1;
            }
            /**
             * <code>optional .RtData rt_data = 1;</code>
             */
            public RtData getRtData() {
                if (rtDataBuilder_ == null) {
                    if (dataCase_ == 1) {
                        return (RtData) data_;
                    }
                    return RtData.getDefaultInstance();
                } else {
                    if (dataCase_ == 1) {
                        return rtDataBuilder_.getMessage();
                    }
                    return RtData.getDefaultInstance();
                }
            }
            /**
             * <code>optional .RtData rt_data = 1;</code>
             */
            public Builder setRtData(RtData value) {
                if (rtDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    data_ = value;
                    onChanged();
                } else {
                    rtDataBuilder_.setMessage(value);
                }
                dataCase_ = 1;
                return this;
            }
            /**
             * <code>optional .RtData rt_data = 1;</code>
             */
            public Builder setRtData(
                    RtData.Builder builderForValue) {
                if (rtDataBuilder_ == null) {
                    data_ = builderForValue.build();
                    onChanged();
                } else {
                    rtDataBuilder_.setMessage(builderForValue.build());
                }
                dataCase_ = 1;
                return this;
            }
            /**
             * <code>optional .RtData rt_data = 1;</code>
             */
            public Builder mergeRtData(RtData value) {
                if (rtDataBuilder_ == null) {
                    if (dataCase_ == 1 &&
                            data_ != RtData.getDefaultInstance()) {
                        data_ = RtData.newBuilder((RtData) data_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        data_ = value;
                    }
                    onChanged();
                } else {
                    if (dataCase_ == 1) {
                        rtDataBuilder_.mergeFrom(value);
                    }
                    rtDataBuilder_.setMessage(value);
                }
                dataCase_ = 1;
                return this;
            }
            /**
             * <code>optional .RtData rt_data = 1;</code>
             */
            public Builder clearRtData() {
                if (rtDataBuilder_ == null) {
                    if (dataCase_ == 1) {
                        dataCase_ = 0;
                        data_ = null;
                        onChanged();
                    }
                } else {
                    if (dataCase_ == 1) {
                        dataCase_ = 0;
                        data_ = null;
                    }
                    rtDataBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>optional .RtData rt_data = 1;</code>
             */
            public RtData.Builder getRtDataBuilder() {
                return getRtDataFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .RtData rt_data = 1;</code>
             */
            public RtDataOrBuilder getRtDataOrBuilder() {
                if ((dataCase_ == 1) && (rtDataBuilder_ != null)) {
                    return rtDataBuilder_.getMessageOrBuilder();
                } else {
                    if (dataCase_ == 1) {
                        return (RtData) data_;
                    }
                    return RtData.getDefaultInstance();
                }
            }
            /**
             * <code>optional .RtData rt_data = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtData, RtData.Builder, RtDataOrBuilder>
            getRtDataFieldBuilder() {
                if (rtDataBuilder_ == null) {
                    if (!(dataCase_ == 1)) {
                        data_ = RtData.getDefaultInstance();
                    }
                    rtDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            RtData, RtData.Builder, RtDataOrBuilder>(
                            (RtData) data_,
                            getParentForChildren(),
                            isClean());
                    data_ = null;
                }
                dataCase_ = 1;
                onChanged();;
                return rtDataBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    RtState, RtState.Builder, RtStateOrBuilder> rtStateBuilder_;
            /**
             * <code>optional .RtState rt_state = 2;</code>
             */
            public boolean hasRtState() {
                return dataCase_ == 2;
            }
            /**
             * <code>optional .RtState rt_state = 2;</code>
             */
            public RtState getRtState() {
                if (rtStateBuilder_ == null) {
                    if (dataCase_ == 2) {
                        return (RtState) data_;
                    }
                    return RtState.getDefaultInstance();
                } else {
                    if (dataCase_ == 2) {
                        return rtStateBuilder_.getMessage();
                    }
                    return RtState.getDefaultInstance();
                }
            }
            /**
             * <code>optional .RtState rt_state = 2;</code>
             */
            public Builder setRtState(RtState value) {
                if (rtStateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    data_ = value;
                    onChanged();
                } else {
                    rtStateBuilder_.setMessage(value);
                }
                dataCase_ = 2;
                return this;
            }
            /**
             * <code>optional .RtState rt_state = 2;</code>
             */
            public Builder setRtState(
                    RtState.Builder builderForValue) {
                if (rtStateBuilder_ == null) {
                    data_ = builderForValue.build();
                    onChanged();
                } else {
                    rtStateBuilder_.setMessage(builderForValue.build());
                }
                dataCase_ = 2;
                return this;
            }
            /**
             * <code>optional .RtState rt_state = 2;</code>
             */
            public Builder mergeRtState(RtState value) {
                if (rtStateBuilder_ == null) {
                    if (dataCase_ == 2 &&
                            data_ != RtState.getDefaultInstance()) {
                        data_ = RtState.newBuilder((RtState) data_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        data_ = value;
                    }
                    onChanged();
                } else {
                    if (dataCase_ == 2) {
                        rtStateBuilder_.mergeFrom(value);
                    }
                    rtStateBuilder_.setMessage(value);
                }
                dataCase_ = 2;
                return this;
            }
            /**
             * <code>optional .RtState rt_state = 2;</code>
             */
            public Builder clearRtState() {
                if (rtStateBuilder_ == null) {
                    if (dataCase_ == 2) {
                        dataCase_ = 0;
                        data_ = null;
                        onChanged();
                    }
                } else {
                    if (dataCase_ == 2) {
                        dataCase_ = 0;
                        data_ = null;
                    }
                    rtStateBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>optional .RtState rt_state = 2;</code>
             */
            public RtState.Builder getRtStateBuilder() {
                return getRtStateFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .RtState rt_state = 2;</code>
             */
            public RtStateOrBuilder getRtStateOrBuilder() {
                if ((dataCase_ == 2) && (rtStateBuilder_ != null)) {
                    return rtStateBuilder_.getMessageOrBuilder();
                } else {
                    if (dataCase_ == 2) {
                        return (RtState) data_;
                    }
                    return RtState.getDefaultInstance();
                }
            }
            /**
             * <code>optional .RtState rt_state = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtState, RtState.Builder, RtStateOrBuilder>
            getRtStateFieldBuilder() {
                if (rtStateBuilder_ == null) {
                    if (!(dataCase_ == 2)) {
                        data_ = RtState.getDefaultInstance();
                    }
                    rtStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            RtState, RtState.Builder, RtStateOrBuilder>(
                            (RtState) data_,
                            getParentForChildren(),
                            isClean());
                    data_ = null;
                }
                dataCase_ = 2;
                onChanged();;
                return rtStateBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    RtSensorData, RtSensorData.Builder, RtSensorDataOrBuilder> rtSensordataBuilder_;
            /**
             * <code>optional .RtSensorData rt_sensordata = 3;</code>
             */
            public boolean hasRtSensordata() {
                return dataCase_ == 3;
            }
            /**
             * <code>optional .RtSensorData rt_sensordata = 3;</code>
             */
            public RtSensorData getRtSensordata() {
                if (rtSensordataBuilder_ == null) {
                    if (dataCase_ == 3) {
                        return (RtSensorData) data_;
                    }
                    return RtSensorData.getDefaultInstance();
                } else {
                    if (dataCase_ == 3) {
                        return rtSensordataBuilder_.getMessage();
                    }
                    return RtSensorData.getDefaultInstance();
                }
            }
            /**
             * <code>optional .RtSensorData rt_sensordata = 3;</code>
             */
            public Builder setRtSensordata(RtSensorData value) {
                if (rtSensordataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    data_ = value;
                    onChanged();
                } else {
                    rtSensordataBuilder_.setMessage(value);
                }
                dataCase_ = 3;
                return this;
            }
            /**
             * <code>optional .RtSensorData rt_sensordata = 3;</code>
             */
            public Builder setRtSensordata(
                    RtSensorData.Builder builderForValue) {
                if (rtSensordataBuilder_ == null) {
                    data_ = builderForValue.build();
                    onChanged();
                } else {
                    rtSensordataBuilder_.setMessage(builderForValue.build());
                }
                dataCase_ = 3;
                return this;
            }
            /**
             * <code>optional .RtSensorData rt_sensordata = 3;</code>
             */
            public Builder mergeRtSensordata(RtSensorData value) {
                if (rtSensordataBuilder_ == null) {
                    if (dataCase_ == 3 &&
                            data_ != RtSensorData.getDefaultInstance()) {
                        data_ = RtSensorData.newBuilder((RtSensorData) data_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        data_ = value;
                    }
                    onChanged();
                } else {
                    if (dataCase_ == 3) {
                        rtSensordataBuilder_.mergeFrom(value);
                    }
                    rtSensordataBuilder_.setMessage(value);
                }
                dataCase_ = 3;
                return this;
            }
            /**
             * <code>optional .RtSensorData rt_sensordata = 3;</code>
             */
            public Builder clearRtSensordata() {
                if (rtSensordataBuilder_ == null) {
                    if (dataCase_ == 3) {
                        dataCase_ = 0;
                        data_ = null;
                        onChanged();
                    }
                } else {
                    if (dataCase_ == 3) {
                        dataCase_ = 0;
                        data_ = null;
                    }
                    rtSensordataBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>optional .RtSensorData rt_sensordata = 3;</code>
             */
            public RtSensorData.Builder getRtSensordataBuilder() {
                return getRtSensordataFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .RtSensorData rt_sensordata = 3;</code>
             */
            public RtSensorDataOrBuilder getRtSensordataOrBuilder() {
                if ((dataCase_ == 3) && (rtSensordataBuilder_ != null)) {
                    return rtSensordataBuilder_.getMessageOrBuilder();
                } else {
                    if (dataCase_ == 3) {
                        return (RtSensorData) data_;
                    }
                    return RtSensorData.getDefaultInstance();
                }
            }
            /**
             * <code>optional .RtSensorData rt_sensordata = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    RtSensorData, RtSensorData.Builder, RtSensorDataOrBuilder>
            getRtSensordataFieldBuilder() {
                if (rtSensordataBuilder_ == null) {
                    if (!(dataCase_ == 3)) {
                        data_ = RtSensorData.getDefaultInstance();
                    }
                    rtSensordataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            RtSensorData, RtSensorData.Builder, RtSensorDataOrBuilder>(
                            (RtSensorData) data_,
                            getParentForChildren(),
                            isClean());
                    data_ = null;
                }
                dataCase_ = 3;
                onChanged();;
                return rtSensordataBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:RtNotification)
        }

        // @@protoc_insertion_point(class_scope:RtNotification)
        private static final RtNotification DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new RtNotification();
        }

        public static RtNotification getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated public static final com.google.protobuf.Parser<RtNotification>
                PARSER = new com.google.protobuf.AbstractParser<RtNotification>() {
            public RtNotification parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RtNotification(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RtNotification> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RtNotification> getParserForType() {
            return PARSER;
        }

        public RtNotification getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RtTime_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RtTime_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_DateTime_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_DateTime_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RtBattery_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RtBattery_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RtHealth_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RtHealth_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RtGNSS_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RtGNSS_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RtSensor_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RtSensor_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RtSubscriber_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RtSubscriber_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RtData_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RtData_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RtState_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RtState_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RtSensorData_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RtSensorData_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_RtNotification_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_RtNotification_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }
    private static  com.google.protobuf.Descriptors.FileDescriptor
            descriptor;
    static {
        String[] descriptorData = {
                "\n\023realtime_data.proto\"\031\n\006RtTime\022\017\n\007secon" +
                        "ds\030\001 \002(\007\"9\n\010DateTime\022\032\n\tdate_time\030\001 \002(\0132" +
                        "\007.RtTime\022\021\n\ttime_zone\030\002 \002(\017\",\n\tRtBattery" +
                        "\022\r\n\005level\030\001 \002(\007\022\020\n\010charging\030\002 \002(\010\"<\n\010RtH" +
                        "ealth\022\r\n\005steps\030\001 \002(\007\022\020\n\010distance\030\002 \002(\007\022\017" +
                        "\n\007calorie\030\003 \002(\007\"N\n\006RtGNSS\022\021\n\tlongitude\030\001" +
                        " \002(\002\022\020\n\010latitude\030\002 \002(\002\022\r\n\005speed\030\003 \002(\002\022\020\n" +
                        "\010altitude\030\004 \002(\002\"=\n\010RtSensor\022#\n\toperation" +
                        "\030\001 \002(\0162\020.SensorOperation\022\014\n\004type\030\002 \002(\007\"\212" +
                        "\001\n\014RtSubscriber\022\025\n\004time\030\001 \001(\0162\007.RtSync\022\030",
                "\n\007battery\030\002 \001(\0162\007.RtSync\022\027\n\006health\030\003 \001(\016" +
                        "2\007.RtSync\022\025\n\004mode\030\004 \001(\0162\007.RtMode\022\031\n\006sens" +
                        "or\030\005 \001(\0132\t.RtSensor\"\204\001\n\006RtData\022\025\n\004time\030\001" +
                        " \001(\0132\007.RtTime\022\033\n\007battery\030\002 \001(\0132\n.RtBatte" +
                        "ry\022\031\n\006health\030\003 \001(\0132\t.RtHealth\022\030\n\003key\030\004 \001" +
                        "(\0162\013.RtKeyEvent\022\021\n\ttime_zone\030\005 \001(\017\"j\n\007Rt" +
                        "State\022\025\n\004time\030\001 \001(\0162\007.RtSync\022\030\n\007battery\030" +
                        "\002 \001(\0162\007.RtSync\022\027\n\006health\030\003 \001(\0162\007.RtSync\022" +
                        "\025\n\004mode\030\004 \001(\0162\007.RtMode\"N\n\014RtSensorData\022\014" +
                        "\n\004type\030\001 \002(\007\022\025\n\004time\030\002 \002(\0132\007.RtTime\022\013\n\003s",
                "eq\030\003 \002(\007\022\014\n\004data\030\004 \003(\007\"z\n\016RtNotification" +
                        "\022\032\n\007rt_data\030\001 \001(\0132\007.RtDataH\000\022\034\n\010rt_state" +
                        "\030\002 \001(\0132\010.RtStateH\000\022&\n\rrt_sensordata\030\003 \001(" +
                        "\0132\r.RtSensorDataH\000B\006\n\004data*;\n\006RtMode\022\027\n\023" +
                        "RT_MODE_BACK_NORMAL\020\000\022\030\n\024RT_MODE_ENTER_C" +
                        "AMERA\020\001*\235\001\n\nRtKeyEvent\022\021\n\rRT_KEY_CAMERA\020" +
                        "\000\022\025\n\021RT_KEY_AUDIO_PLAY\020\001\022\024\n\020RT_KEY_AUDIO" +
                        "_PRE\020\002\022\025\n\021RT_KEY_AUDIO_NEXT\020\003\022\032\n\026RT_KEY_" +
                        "AUDIO_VOLUME_UP\020\004\022\034\n\030RT_KEY_AUDIO_VOLUME" +
                        "_DOWN\020\005*\247\001\n\006RtSync\022\014\n\010STOP_ALL\020\000\022\r\n\tONLY",
                "_ONCE\020\001\022\023\n\017ON_VALUE_CHANGE\020\002\022\024\n\020ON_SECON" +
                        "D_CHANGE\020\003\022\024\n\020ON_MINUTE_CHANGE\020\004\022\022\n\016ON_H" +
                        "OUR_CHANGE\020\005\022\021\n\rON_DAY_CHANGE\020\006\022\030\n\024ON_TE" +
                        "N_MINUTE_CHANGE\020\007*D\n\nSensorType\022\010\n\004NONE\020" +
                        "\000\022\007\n\003ECG\020\001\022\007\n\003PPG\020\002\022\007\n\003MAG\020\004\022\010\n\004GYRO\020\010\022\007" +
                        "\n\003ACC\020\020*U\n\017SensorOperation\022\025\n\021SENSOR_STA" +
                        "RT_SYNC\020\000\022\025\n\021SENSOR_PAUSE_SYNC\020\001\022\024\n\020SENS" +
                        "OR_STOP_SYNC\020\002"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[] {
                        }, assigner);
        internal_static_RtTime_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_RtTime_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RtTime_descriptor,
                new String[] { "Seconds", });
        internal_static_DateTime_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_DateTime_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_DateTime_descriptor,
                new String[] { "DateTime", "TimeZone", });
        internal_static_RtBattery_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_RtBattery_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RtBattery_descriptor,
                new String[] { "Level", "Charging", });
        internal_static_RtHealth_descriptor =
                getDescriptor().getMessageTypes().get(3);
        internal_static_RtHealth_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RtHealth_descriptor,
                new String[] { "Steps", "Distance", "Calorie", });
        internal_static_RtGNSS_descriptor =
                getDescriptor().getMessageTypes().get(4);
        internal_static_RtGNSS_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RtGNSS_descriptor,
                new String[] { "Longitude", "Latitude", "Speed", "Altitude", });
        internal_static_RtSensor_descriptor =
                getDescriptor().getMessageTypes().get(5);
        internal_static_RtSensor_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RtSensor_descriptor,
                new String[] { "Operation", "Type", });
        internal_static_RtSubscriber_descriptor =
                getDescriptor().getMessageTypes().get(6);
        internal_static_RtSubscriber_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RtSubscriber_descriptor,
                new String[] { "Time", "Battery", "Health", "Mode", "Sensor", });
        internal_static_RtData_descriptor =
                getDescriptor().getMessageTypes().get(7);
        internal_static_RtData_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RtData_descriptor,
                new String[] { "Time", "Battery", "Health", "Key", "TimeZone", });
        internal_static_RtState_descriptor =
                getDescriptor().getMessageTypes().get(8);
        internal_static_RtState_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RtState_descriptor,
                new String[] { "Time", "Battery", "Health", "Mode", });
        internal_static_RtSensorData_descriptor =
                getDescriptor().getMessageTypes().get(9);
        internal_static_RtSensorData_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RtSensorData_descriptor,
                new String[] { "Type", "Time", "Seq", "Data", });
        internal_static_RtNotification_descriptor =
                getDescriptor().getMessageTypes().get(10);
        internal_static_RtNotification_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_RtNotification_descriptor,
                new String[] { "RtData", "RtState", "RtSensordata", "Data", });
    }

    // @@protoc_insertion_point(outer_class_scope)
}



